{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/consts.ts","webpack:///./src/devices/device.ts","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/debug/src/browser.js","webpack:///./src/utils.ts","webpack:///./node_modules/events/events.js","webpack:///./src/hubs/lpf2hub.ts","webpack:///./src/devices/basicmotor.ts","webpack:///./src/devices/absolutemotor.ts","webpack:///./src/devices/tachomotor.ts","webpack:///(webpack)/buildin/global.js","webpack:///./src/hubs/basehub.ts","webpack:///./src/hubs/duplotrainbase.ts","webpack:///./src/devices/colordistancesensor.ts","webpack:///./src/devices/currentsensor.ts","webpack:///./src/devices/duplotrainbasecolorsensor.ts","webpack:///./src/devices/duplotrainbasemotor.ts","webpack:///./src/devices/duplotrainbasespeaker.ts","webpack:///./src/devices/duplotrainbasespeedometer.ts","webpack:///./src/devices/hubled.ts","webpack:///./src/devices/light.ts","webpack:///./src/devices/mediumlinearmotor.ts","webpack:///./src/devices/motionsensor.ts","webpack:///./src/devices/movehubmediumlinearmotor.ts","webpack:///./src/devices/movehubtiltsensor.ts","webpack:///./src/devices/piezobuzzer.ts","webpack:///./src/devices/remotecontrolbutton.ts","webpack:///./src/devices/simplemediumlinearmotor.ts","webpack:///./src/devices/techniccolorsensor.ts","webpack:///./src/devices/technicdistancesensor.ts","webpack:///./src/devices/technicforcesensor.ts","webpack:///./src/devices/techniclargeangularmotor.ts","webpack:///./src/devices/techniclargelinearmotor.ts","webpack:///./src/devices/technicmediumangularmotor.ts","webpack:///./src/devices/technicmediumhubaccelerometersensor.ts","webpack:///./src/devices/technicmediumhubgyrosensor.ts","webpack:///./src/devices/technicmediumhubtiltsensor.ts","webpack:///./src/devices/technicxlargelinearmotor.ts","webpack:///./src/devices/tiltsensor.ts","webpack:///./src/devices/trainmotor.ts","webpack:///./src/devices/voltagesensor.ts","webpack:///./src/hubs/hub.ts","webpack:///./node_modules/compare-versions/index.js","webpack:///./src/hubs/movehub.ts","webpack:///./src/hubs/remotecontrol.ts","webpack:///./src/hubs/technicmediumhub.ts","webpack:///./src/hubs/wedo2smarthub.ts","webpack:///./src/index-browser.ts","webpack:///./src/poweredup-browser.ts","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/webbleabstraction.ts","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/debug/src/common.js","webpack:///./node_modules/ms/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","HubType","DeviceType","Color","HubTypeNames","DeviceTypeNames","ColorNames","ButtonState","BrakingStyle","DuploTrainBaseSound","BLEManufacturerData","BLEService","BLECharacteristic","MessageType","HubPropertyReference","HubPropertyOperation","HubPropertyPayload","ActionType","AlertType","AlertOperation","AlertPayload","IOTypeID","ErrorCode","HWNetWorkCommandType","HWNetworkFamily","HWNetworkSubFamily","ModeInformationType","PortInputFormatSetupSubCommand","Device","EventEmitter","hub","portId","modeMap","type","Consts","UNKNOWN","super","autoSubscribe","values","_busy","_connected","_modeMap","_isVirtualPort","_eventTimer","this","_hub","_portId","_type","_isWeDo2SmartHub","WEDO2_SMART_HUB","isPortVirtual","eventAttachListener","event","undefined","subscribe","deviceDetachListener","device","removeListener","emit","listenerCount","on","getPortNameForPortId","_mode","data","isWeDo2SmartHub","send","Buffer","concat","from","WEDO2_MOTOR_VALUE_WRITE","LPF2_ALL","characteristic","_ensureConnected","message","notify","_finished","timer","clearTimeout","connected","Error","base64","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","length","RangeError","Uint8Array","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","push","charCodeAt","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","Array","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","log","args","console","formatArgs","useColors","namespace","humanize","diff","color","splice","index","lastC","save","namespaces","storage","setItem","removeItem","error","load","getItem","process","env","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","localStorage","localstorage","colors","formatters","v","JSON","stringify","isWebBluetooth","bluetooth","padStart","toBin","mapSpeed","speed","decodeVersion","version","parts","substring","decodeMACAddress","address","map","part","normalizeAngle","angle","roundAngleToNearest90","calculateRamp","fromPower","toPower","time","emitter","steps","abs","delay","increment","interval","setInterval","power","round","clearInterval","setEventTimer","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","init","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","_addListener","prepend","events","existing","warning","newListener","unshift","warned","w","count","warn","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","err","context","handler","listeners","addListener","prependListener","once","prependOnceListener","position","originalListener","shift","pop","spliceOne","off","removeAllListeners","keys","rawListeners","eventNames","debug","Debug","modeInfoDebug","LPF2Hub","BaseHub","_messageBuffer","_propertyRequestCallbacks","connect","_bleDevice","discoverCharacteristicsForService","LPF2_HUB","subscribeToCharacteristic","_parseMessage","_requestHubPropertyReports","_requestHubPropertyValue","_name","uuid","writeToCharacteristic","deviceType","firstPortName","secondPortName","firstDevice","getDeviceAtPort","secondDevice","callback","_parseHubPropertyResponse","_parsePortMessage","_parsePortInformationResponse","_parseModeInformationResponse","_parseSensorMessage","_parsePortAction","Promise","resolve","PRESSED","RELEASED","_firmwareVersion","_checkFirmware","_hardwareVersion","rssi","_rssi","_primaryMACAddress","batteryLevel","_batteryLevel","enabled","deviceTypeName","hwVersion","swVersion","_sendPortInformationRequest","_createDevice","_attachDevice","_getDeviceByPortId","_detachDevice","portName","_portMap","_virtualPorts","filter","virtualPortId","virtualPortName","port","modeCombinationMasks","input","output","_sendModeInformationRequest","numValues","dataType","totalFigures","decimals","finish","receive","BasicMotor","interrupt","cancelEventTimer","writeDirect","setPower","BRAKE","AbsoluteMotor","TachoMotor","assign","ModeMap","Mode","ABSOLUTE","isVirtualPort","_maxPower","_brakeStyle","useProfile","oldMode","calibrated","async","rotateByDegrees","requestUpdate","ROTATION","useAccelerationProfile","useDecelerationProfile","degrees","maxPower","profile","g","bleDevice","portMap","_attachedDevices","_attachCallbacks","connecting","disconnect","existingDevice","getDevices","existingDevices","getDevicesByType","setTimeout","commands","all","constructor","LIGHT","Light","TRAIN_MOTOR","TrainMotor","SIMPLE_MEDIUM_LINEAR_MOTOR","SimpleMediumLinearMotor","MOVE_HUB_MEDIUM_LINEAR_MOTOR","MoveHubMediumLinearMotor","MOTION_SENSOR","MotionSensor","TILT_SENSOR","TiltSensor","MOVE_HUB_TILT_SENSOR","MoveHubTiltSensor","PIEZO_BUZZER","PiezoBuzzer","TECHNIC_COLOR_SENSOR","TechnicColorSensor","TECHNIC_DISTANCE_SENSOR","TechnicDistanceSensor","TECHNIC_FORCE_SENSOR","TechnicForceSensor","TECHNIC_MEDIUM_HUB_TILT_SENSOR","TechnicMediumHubTiltSensor","TECHNIC_MEDIUM_HUB_GYRO_SENSOR","TechnicMediumHubGyroSensor","TECHNIC_MEDIUM_HUB_ACCELEROMETER","TechnicMediumHubAccelerometerSensor","MEDIUM_LINEAR_MOTOR","MediumLinearMotor","TECHNIC_MEDIUM_ANGULAR_MOTOR","TechnicMediumAngularMotor","TECHNIC_LARGE_ANGULAR_MOTOR","TechnicLargeAngularMotor","TECHNIC_LARGE_LINEAR_MOTOR","TechnicLargeLinearMotor","TECHNIC_XLARGE_LINEAR_MOTOR","TechnicXLargeLinearMotor","COLOR_DISTANCE_SENSOR","ColorDistanceSensor","VOLTAGE_SENSOR","VoltageSensor","CURRENT_SENSOR","CurrentSensor","REMOTE_CONTROL_BUTTON","RemoteControlButton","HUB_LED","HubLED","DUPLO_TRAIN_BASE_COLOR_SENSOR","DuploTrainBaseColorSensor","DUPLO_TRAIN_BASE_MOTOR","DuploTrainBaseMotor","DUPLO_TRAIN_BASE_SPEAKER","DuploTrainBaseSpeaker","DUPLO_TRAIN_BASE_SPEEDOMETER","DuploTrainBaseSpeedometer","DuploTrainBase","peripheral","advertisement","serviceUuids","manufacturerData","DUPLO_TRAIN_BASE_ID","PortMap","DUPLO_TRAIN_BASE","COLOR","DISTANCE","distance","COLOR_AND_DISTANCE","partial","channel","sendPFIRMessage","_pfPowerToPWM","powerBlue","powerRed","payload","PF_IR","reject","LED","Output","CURRENT","current","maxCurrentValue","MaxCurrentValue","maxCurrentRaw","MaxCurrentRaw","TECHNIC_MEDIUM_HUB","REFLECTIVITY","reflect","RGB","red","green","blue","sound","SOUND","tone","TONE","SPEED","WEDO2_PORT_TYPE_WRITE","brightness","fromBrightness","toBrightness","setBrightness","TILT","frequency","BUTTON_EVENTS","AMBIENT_LIGHT","ambient","firstSegment","secondSegment","thirdSegment","FAST_DISTANCE","fastDistance","topLeft","bottomLeft","topRight","bottomRight","FORCE","force","TOUCHED","touched","TAPPED","tapped","ACCEL","z","GYRO","VOLTAGE","voltage","maxVoltageValue","MaxVoltageValue","maxVoltageRaw","MaxVoltageRaw","REMOTE_CONTROL","Hub","HUB","_currentPort","HUB_ID","semver","split","q","patchIndex","tryParse","validate","test","compareVersions","v1","v2","forEach","s1","s2","n1","n2","sp1","sp2","p1","p2","allowedOperators","operatorResMap","operator","op","validateOperator","MoveHub","MOVE_HUB_ID","MOVE_HUB","RemoteControl","REMOTE_CONTROL_ID","TechnicMediumHub","WeDo2SmartHub","_lastTiltX","_lastTiltY","WEDO2_SMART_HUB_2","WEDO2_SMART_HUB_3","WEDO2_SMART_HUB_4","WEDO2_SMART_HUB_5","WEDO2_PORT_TYPE","WEDO2_SENSOR_VALUE","WEDO2_BUTTON","readFromCharacteristic","_parseBatteryMessage","_parseHighCurrentAlert","WEDO2_BATTERY","WEDO2_HIGH_CURRENT_ALERT","_parseFirmwareRevisionString","WEDO2_FIRMWARE_REVISION","WEDO2_DISCONNECT","WEDO2_NAME_ID","_getCharacteristicNameFromUUID","PoweredUP","_connectedHubs","_discoveryEventHandler","requestDevice","filters","services","optionalServices","server","gatt","primaryMACAddress","hubType","addToCharacteristicMailbox","WebBLEDevice","isLPF2Hub","_determineLPF2HubType","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","_characteristics","_queue","_mailbox","_connecting","_webBLEServer","_uuid","id","addEventListener","service","getPrimaryService","characteristics","getCharacteristics","removeEventListener","view","mailbox","startNotifications","readValue","then","writeValue","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","argv","versions","binding","cwd","chdir","umask","selectColor","hash","createDebug","prevTime","self","curr","Date","ms","prev","coerce","format","formatter","destroy","extend","instances","delimiter","newDebug","toNamespace","regexp","default","stack","disable","names","skips","enable","instance","h","plural","msAbs","isPlural","options","exec","parseFloat","parse","long","fmtLong","fmtShort"],"mappings":"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","file":"poweredup.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 47);\n","/**\n * @typedef HubType\n * @property {number} UNKNOWN 0\n * @property {number} WEDO2_SMART_HUB 1\n * @property {number} MOVE_HUB 2\n * @property {number} POWERED_UP_HUB 3\n * @property {number} POWERED_UP_REMOTE 4\n * @property {number} DUPLO_TRAIN_HUB 5\n * @property {number} CONTROL_PLUS_HUB 6\n */\nexport enum HubType {\n    UNKNOWN = 0,\n    WEDO2_SMART_HUB = 1,\n    MOVE_HUB = 2,\n    HUB = 3,\n    REMOTE_CONTROL = 4,\n    DUPLO_TRAIN_BASE = 5,\n    TECHNIC_MEDIUM_HUB = 6\n}\n\n\n// tslint:disable-next-line\nexport const HubTypeNames = HubType;\n\n\n/**\n * @typedef DeviceType\n * @property {number} UNKNOWN 0\n * @property {number} SIMPLE_MEDIUM_LINEAR_MOTOR 1\n * @property {number} TRAIN_MOTOR 2\n * @property {number} LED_LIGHTS 8\n * @property {number} VOLTAGE 20\n * @property {number} CURRENT 21\n * @property {number} PIEZO_TONE 22\n * @property {number} RGB_LIGHT 23\n * @property {number} WEDO2_TILT 34\n * @property {number} WEDO2_DISTANCE 35\n * @property {number} COLOR_DISTANCE_SENSOR 37\n * @property {number} MEDIUM_LINEAR_MOTOR 38\n * @property {number} MOVE_HUB_MEDIUM_LINEAR_MOTOR 39\n * @property {number} BOOST_TILT 40\n * @property {number} DUPLO_TRAIN_BASE_MOTOR 41\n * @property {number} DUPLO_TRAIN_BASE_SPEAKER 42\n * @property {number} DUPLO_TRAIN_BASE_COLOR 43\n * @property {number} DUPLO_TRAIN_BASE_SPEEDOMETER 44\n * @property {number} CONTROL_PLUS_LARGE_MOTOR 46\n * @property {number} CONTROL_PLUS_XLARGE_MOTOR 47\n * @property {number} POWERED_UP_REMOTE_BUTTON 55\n * @property {number} RSSI 56\n * @property {number} CONTROL_PLUS_ACCELEROMETER 58\n * @property {number} CONTROL_PLUS_TILT 59\n */\nexport enum DeviceType {\n    UNKNOWN = 0,\n    SIMPLE_MEDIUM_LINEAR_MOTOR = 1,\n    TRAIN_MOTOR = 2,\n    LIGHT = 8,\n    VOLTAGE_SENSOR = 20,\n    CURRENT_SENSOR = 21,\n    PIEZO_BUZZER = 22,\n    HUB_LED = 23,\n    TILT_SENSOR = 34,\n    MOTION_SENSOR = 35,\n    COLOR_DISTANCE_SENSOR = 37,\n    MEDIUM_LINEAR_MOTOR = 38,\n    MOVE_HUB_MEDIUM_LINEAR_MOTOR = 39,\n    MOVE_HUB_TILT_SENSOR = 40,\n    DUPLO_TRAIN_BASE_MOTOR = 41,\n    DUPLO_TRAIN_BASE_SPEAKER = 42,\n    DUPLO_TRAIN_BASE_COLOR_SENSOR = 43,\n    DUPLO_TRAIN_BASE_SPEEDOMETER = 44,\n    TECHNIC_LARGE_LINEAR_MOTOR = 46, // Technic Control+\n    TECHNIC_XLARGE_LINEAR_MOTOR = 47, // Technic Control+\n    TECHNIC_MEDIUM_ANGULAR_MOTOR = 48, // Spike Prime\n    TECHNIC_LARGE_ANGULAR_MOTOR = 49, // Spike Prime\n    TECHNIC_MEDIUM_HUB_GEST_SENSOR = 54,\n    REMOTE_CONTROL_BUTTON = 55,\n    REMOTE_CONTROL_RSSI = 56,\n    TECHNIC_MEDIUM_HUB_ACCELEROMETER = 57,\n    TECHNIC_MEDIUM_HUB_GYRO_SENSOR = 58,\n    TECHNIC_MEDIUM_HUB_TILT_SENSOR = 59,\n    TECHNIC_MEDIUM_HUB_TEMPERATURE_SENSOR = 60,\n    TECHNIC_COLOR_SENSOR = 61, // Spike Prime\n    TECHNIC_DISTANCE_SENSOR = 62, // Spike Prime\n    TECHNIC_FORCE_SENSOR = 63, // Spike Prime\n    TECHNIC_MEDIUM_ANGULAR_MOTOR_GREY = 75, // Mindstorms\n    TECHNIC_LARGE_ANGULAR_MOTOR_GREY = 76, // Mindstorms\n}\n\n\n// tslint:disable-next-line\nexport const DeviceTypeNames = DeviceType;\n\n\n/**\n * @typedef Color\n * @property {number} BLACK 0\n * @property {number} PINK 1\n * @property {number} PURPLE 2\n * @property {number} BLUE 3\n * @property {number} LIGHT_BLUE 4\n * @property {number} CYAN 5\n * @property {number} GREEN 6\n * @property {number} YELLOW 7\n * @property {number} ORANGE 8\n * @property {number} RED 9\n * @property {number} WHITE 10\n * @property {number} NONE 255\n */\nexport enum Color {\n    BLACK = 0,\n    PINK = 1,\n    PURPLE = 2,\n    BLUE = 3,\n    LIGHT_BLUE = 4,\n    CYAN = 5,\n    GREEN = 6,\n    YELLOW = 7,\n    ORANGE = 8,\n    RED = 9,\n    WHITE = 10,\n    NONE = 255\n}\n\n\n// tslint:disable-next-line\nexport const ColorNames = Color;\n\n\n/**\n * @typedef ButtonState\n * @property {number} PRESSED 0\n * @property {number} RELEASED 1\n * @property {number} UP 2\n * @property {number} DOWN 3\n * @property {number} STOP 4\n */\nexport enum ButtonState {\n    PRESSED = 2,\n    RELEASED = 0,\n    UP = 1,\n    DOWN = 255,\n    STOP = 127\n}\n\n\n/**\n * @typedef BrakingStyle\n * @property {number} HOLD 127\n * @property {number} BRAKE 128\n */\nexport enum BrakingStyle {\n    FLOAT = 0,\n    HOLD = 126,\n    BRAKE = 127\n}\n\n\n/**\n * @typedef DuploTrainBaseSound\n * @property {number} BRAKE 3\n * @property {number} STATION_DEPARTURE 5\n * @property {number} WATER_REFILL 7\n * @property {number} HORN 9\n * @property {number} STEAM 10\n */\nexport enum DuploTrainBaseSound {\n    BRAKE = 3,\n    STATION_DEPARTURE = 5,\n    WATER_REFILL = 7,\n    HORN = 9,\n    STEAM = 10\n}\n\n\nexport enum BLEManufacturerData {\n    DUPLO_TRAIN_BASE_ID = 32,\n    MOVE_HUB_ID = 64,\n    HUB_ID = 65,\n    REMOTE_CONTROL_ID = 66,\n    TECHNIC_MEDIUM_HUB = 128\n}\n\n\nexport enum BLEService {\n    WEDO2_SMART_HUB = \"00001523-1212-efde-1523-785feabcd123\",\n    WEDO2_SMART_HUB_2 = \"00004f0e-1212-efde-1523-785feabcd123\",\n    WEDO2_SMART_HUB_3 = \"2a19\",\n    WEDO2_SMART_HUB_4 = \"180f\",\n    WEDO2_SMART_HUB_5 = \"180a\",\n    LPF2_HUB = \"00001623-1212-efde-1623-785feabcd123\"\n}\n\n\nexport enum BLECharacteristic {\n    WEDO2_BATTERY = \"2a19\",\n    WEDO2_FIRMWARE_REVISION = \"2a26\",\n    WEDO2_BUTTON = \"00001526-1212-efde-1523-785feabcd123\", // \"1526\"\n    WEDO2_PORT_TYPE = \"00001527-1212-efde-1523-785feabcd123\", // \"1527\" // Handles plugging and unplugging of devices on WeDo 2.0 Smart Hub\n    WEDO2_LOW_VOLTAGE_ALERT = \"00001528-1212-efde-1523-785feabcd123\", // \"1528\"\n    WEDO2_HIGH_CURRENT_ALERT = \"00001529-1212-efde-1523-785feabcd123\", // \"1529\"\n    WEDO2_LOW_SIGNAL_ALERT = \"0000152a-1212-efde-1523-785feabcd123\", // \"152a\",\n    WEDO2_DISCONNECT = \"0000152b-1212-efde-1523-785feabcd123\", // \"152b\"\n    WEDO2_SENSOR_VALUE = \"00001560-1212-efde-1523-785feabcd123\", // \"1560\"\n    WEDO2_VALUE_FORMAT = \"00001561-1212-efde-1523-785feabcd123\", // \"1561\"\n    WEDO2_PORT_TYPE_WRITE = \"00001563-1212-efde-1523-785feabcd123\", // \"1563\"\n    WEDO2_MOTOR_VALUE_WRITE = \"00001565-1212-efde-1523-785feabcd123\", // \"1565\"\n    WEDO2_NAME_ID = \"00001524-1212-efde-1523-785feabcd123\", // \"1524\"\n    LPF2_ALL = \"00001624-1212-efde-1623-785feabcd123\"\n}\n\n\n/**\n * @typedef MessageType\n * @property {number} HUB_PROPERTIES 0x01\n * @property {number} HUB_ACTIONS 0x02\n * @property {number} HUB_ALERTS 0x03\n * @property {number} HUB_ATTACHED_IO 0x04\n * @property {number} GENERIC_ERROR_MESSAGES 0x05\n * @property {number} HW_NETWORK_COMMANDS 0x08\n * @property {number} FW_UPDATE_GO_INTO_BOOT_MODE 0x10\n * @property {number} FW_UPDATE_LOCK_MEMORY 0x11\n * @property {number} FW_UPDATE_LOCK_STATUS_REQUEST 0x12\n * @property {number} FW_LOCK_STATUS 0x13\n * @property {number} PORT_INFORMATION_REQUEST 0x21\n * @property {number} PORT_MODE_INFORMATION_REQUEST 0x22\n * @property {number} PORT_INPUT_FORMAT_SETUP_SINGLE 0x41\n * @property {number} PORT_INPUT_FORMAT_SETUP_COMBINEDMODE 0x42\n * @property {number} PORT_INFORMATION 0x43\n * @property {number} PORT_MODE_INFORMATION 0x44\n * @property {number} PORT_VALUE_SINGLE 0x45\n * @property {number} PORT_VALUE_COMBINEDMODE 0x46\n * @property {number} PORT_INPUT_FORMAT_SINGLE 0x47\n * @property {number} PORT_INPUT_FORMAT_COMBINEDMODE 0x48\n * @property {number} VIRTUAL_PORT_SETUP 0x61\n * @property {number} PORT_OUTPUT_COMMAND 0x81\n * @property {number} PORT_OUTPUT_COMMAND_FEEDBACK 0x82\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#message-types\n */\nexport enum MessageType {\n    HUB_PROPERTIES = 0x01,\n    HUB_ACTIONS = 0x02,\n    HUB_ALERTS = 0x03,\n    HUB_ATTACHED_IO = 0x04,\n    GENERIC_ERROR_MESSAGES = 0x05,\n    HW_NETWORK_COMMANDS = 0x08,\n    FW_UPDATE_GO_INTO_BOOT_MODE = 0x10,\n    FW_UPDATE_LOCK_MEMORY = 0x11,\n    FW_UPDATE_LOCK_STATUS_REQUEST = 0x12,\n    FW_LOCK_STATUS = 0x13,\n    PORT_INFORMATION_REQUEST = 0x21,\n    PORT_MODE_INFORMATION_REQUEST = 0x22,\n    PORT_INPUT_FORMAT_SETUP_SINGLE = 0x41,\n    PORT_INPUT_FORMAT_SETUP_COMBINEDMODE = 0x42,\n    PORT_INFORMATION = 0x43,\n    PORT_MODE_INFORMATION = 0x44,\n    PORT_VALUE_SINGLE = 0x45,\n    PORT_VALUE_COMBINEDMODE = 0x46,\n    PORT_INPUT_FORMAT_SINGLE = 0x47,\n    PORT_INPUT_FORMAT_COMBINEDMODE = 0x48,\n    VIRTUAL_PORT_SETUP = 0x61,\n    PORT_OUTPUT_COMMAND = 0x81,\n    PORT_OUTPUT_COMMAND_FEEDBACK = 0x82,\n}\n\n\n/**\n * @typedef HubPropertyReference\n * @param {number} ADVERTISING_NAME 0x01\n * @param {number} BUTTON 0x02\n * @param {number} FW_VERSION 0x03\n * @param {number} HW_VERSION 0x04\n * @param {number} RSSI 0x05\n * @param {number} BATTERY_VOLTAGE 0x06\n * @param {number} BATTERY_TYPE 0x07\n * @param {number} MANUFACTURER_NAME 0x08\n * @param {number} RADIO_FIRMWARE_VERSION 0x09\n * @param {number} LEGO_WIRELESS_PROTOCOL_VERSION 0x0A\n * @param {number} SYSTEM_TYPE_ID 0x0B\n * @param {number} HW_NETWORK_ID 0x0C\n * @param {number} PRIMARY_MAC_ADDRESS 0x0D\n * @param {number} SECONDARY_MAC_ADDRESS 0x0E\n * @param {number} HARDWARE_NETWORK_FAMILY 0x0F\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#hub-property-reference\n */\nexport enum HubPropertyReference {\n    ADVERTISING_NAME = 0x01,\n    BUTTON = 0x02,\n    FW_VERSION = 0x03,\n    HW_VERSION = 0x04,\n    RSSI = 0x05,\n    BATTERY_VOLTAGE = 0x06,\n    BATTERY_TYPE = 0x07,\n    MANUFACTURER_NAME = 0x08,\n    RADIO_FIRMWARE_VERSION = 0x09,\n    LEGO_WIRELESS_PROTOCOL_VERSION = 0x0A,\n    SYSTEM_TYPE_ID = 0x0B,\n    HW_NETWORK_ID = 0x0C,\n    PRIMARY_MAC_ADDRESS = 0x0D,\n    SECONDARY_MAC_ADDRESS = 0x0E,\n    HARDWARE_NETWORK_FAMILY = 0x0F,\n}\n\n\n/**\n * @typedef HubPropertyOperation\n * @param {number} SET_DOWNSTREAM 0x01\n * @param {number} ENABLE_UPDATES_DOWNSTREAM 0x02\n * @param {number} DISABLE_UPDATES_DOWNSTREAM 0x03\n * @param {number} RESET_DOWNSTREAM 0x04\n * @param {number} REQUEST_UPDATE_DOWNSTREAM 0x05\n * @param {number} UPDATE_UPSTREAM 0x06\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#hub-property-reference\n */\nexport enum HubPropertyOperation {\n    SET_DOWNSTREAM = 0x01,\n    ENABLE_UPDATES_DOWNSTREAM = 0x02,\n    DISABLE_UPDATES_DOWNSTREAM = 0x03,\n    RESET_DOWNSTREAM = 0x04,\n    REQUEST_UPDATE_DOWNSTREAM = 0x05,\n    UPDATE_UPSTREAM = 0x06,\n}\n\n\n/**\n * @typedef HubPropertyPayload\n * @param {number} ADVERTISING_NAME 0x01\n * @param {number} BUTTON_STATE 0x02\n * @param {number} FW_VERSION 0x03\n * @param {number} HW_VERSION 0x04\n * @param {number} RSSI 0x05\n * @param {number} BATTERY_VOLTAGE 0x06\n * @param {number} BATTERY_TYPE 0x07\n * @param {number} MANUFACTURER_NAME 0x08\n * @param {number} RADIO_FIRMWARE_VERSION 0x09\n * @param {number} LWP_PROTOCOL_VERSION 0x0A\n * @param {number} SYSTEM_TYPE_ID 0x0B\n * @param {number} HW_NETWORK_ID 0x0C\n * @param {number} PRIMARY_MAC_ADDRESS 0x0D\n * @param {number} SECONDARY_MAC_ADDRESS 0x0E\n * @param {number} HW_NETWORK_FAMILY 0x0F\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#hub-property-reference\n */\nexport enum HubPropertyPayload {\n    ADVERTISING_NAME = 0x01,\n    BUTTON_STATE = 0x02,\n    FW_VERSION = 0x03,\n    HW_VERSION = 0x04,\n    RSSI = 0x05,\n    BATTERY_VOLTAGE = 0x06,\n    BATTERY_TYPE = 0x07,\n    MANUFACTURER_NAME = 0x08,\n    RADIO_FIRMWARE_VERSION = 0x09,\n    LWP_PROTOCOL_VERSION = 0x0A,\n    SYSTEM_TYPE_ID = 0x0B,\n    HW_NETWORK_ID = 0x0C,\n    PRIMARY_MAC_ADDRESS = 0x0D,\n    SECONDARY_MAC_ADDRESS = 0x0E,\n    HW_NETWORK_FAMILY = 0x0F,\n}\n\n\n/**\n * @typedef ActionType\n * @param {number} SWITCH_OFF_HUB 0x01\n * @param {number} DISCONNECT 0x02\n * @param {number} VCC_PORT_CONTROL_ON 0x03\n * @param {number} VCC_PORT_CONTROL_OFF 0x04\n * @param {number} ACTIVATE_BUSY_INDICATION 0x05\n * @param {number} RESET_BUSY_INDICATION 0x06\n * @param {number} SHUTDOWN 0x2F\n * @param {number} HUB_WILL_SWITCH_OFF 0x30\n * @param {number} HUB_WILL_DISCONNECT 0x31\n * @param {number} HUB_WILL_GO_INTO_BOOT_MODE 0x32\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#action-types\n */\nexport enum ActionType {\n    SWITCH_OFF_HUB = 0x01,\n    DISCONNECT = 0x02,\n    VCC_PORT_CONTROL_ON = 0x03,\n    VCC_PORT_CONTROL_OFF = 0x04,\n    ACTIVATE_BUSY_INDICATION = 0x05,\n    RESET_BUSY_INDICATION = 0x06,\n    SHUTDOWN = 0x2F,\n    HUB_WILL_SWITCH_OFF = 0x30,\n    HUB_WILL_DISCONNECT = 0x31,\n    HUB_WILL_GO_INTO_BOOT_MODE = 0x32,\n}\n\n\n/**\n * @typedef AlertType\n * @param {number} LOW_VOLTAGE 0x01\n * @param {number} HIGH_CURRENT 0x02\n * @param {number} LOW_SIGNAL_STRENGTH 0x03\n * @param {number} OVER_POWER_CONDITION 0x04\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#alert-type\n */\nexport enum AlertType {\n    LOW_VOLTAGE = 0x01,\n    HIGH_CURRENT = 0x02,\n    LOW_SIGNAL_STRENGTH = 0x03,\n    OVER_POWER_CONDITION = 0x04,\n}\n\n\n/**\n * @typedef AlertOperation\n * @param {number} ENABLE_UPDATE 0x01\n * @param {number} DISABLE_UPDATE 0x02\n * @param {number} REQUEST_UPDATE 0x03\n * @param {number} UPDATE 0x04\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#alert-operation\n */\nexport enum AlertOperation {\n    LOW_VOLTAGE = 0x01,\n    HIGH_CURRENT = 0x02,\n    LOW_SIGNAL_STRENGTH = 0x03,\n    OVER_POWER_CONDITION = 0x04,\n}\n\n\n/**\n * @typedef AlertPayload\n * @param {number} STATUS_OK 0x00\n * @param {number} ALERT 0xFF\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#alert-payload\n */\nexport enum AlertPayload {\n    STATUS_OK = 0x00,\n    ALERT = 0xFF,\n}\n\n\n/**\n * @typedef Event\n * @param {number} DETACHED_IO 0x00\n * @param {number} ATTACHED_IO 0x01\n * @param {number} ATTACHED_VIRTUAL_IO 0x02\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#event\n */\nexport enum AlertPayload {\n    DETACHED_IO = 0x00,\n    ATTACHED_IO = 0x01,\n    ATTACHED_VIRTUAL_IO = 0x02,\n}\n\n\n/**\n * @typedef IOTypeID\n * @param {number} MOTOR 0x0001\n * @param {number} SYSTEM_TRAIN_MOTOR 0x0002\n * @param {number} BUTTON 0x0005\n * @param {number} LED_LIGHT 0x0008\n * @param {number} VOLTAGE 0x0014\n * @param {number} CURRENT 0x0015\n * @param {number} PIEZO_TONE_SOUND 0x0016\n * @param {number} RGB_LIGHT 0x0017\n * @param {number} EXTERNAL_TILT_SENSOR 0x0022\n * @param {number} MOTION_SENSOR 0x0023\n * @param {number} VISION_SENSOR 0x0025\n * @param {number} EXTERNAL_MOTOR 0x0026\n * @param {number} INTERNAL_MOTOR 0x0027\n * @param {number} INTERNAL_TILT 0x0028\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#io-type-id\n */\nexport enum IOTypeID {\n    MOTOR = 0x0001,\n    SYSTEM_TRAIN_MOTOR = 0x0002,\n    BUTTON = 0x0005,\n    LED_LIGHT = 0x0008,\n    VOLTAGE = 0x0014,\n    CURRENT = 0x0015,\n    PIEZO_TONE_SOUND = 0x0016,\n    RGB_LIGHT = 0x0017,\n    EXTERNAL_TILT_SENSOR = 0x0022,\n    MOTION_SENSOR = 0x0023,\n    VISION_SENSOR = 0x0025,\n    EXTERNAL_MOTOR = 0x0026,\n    INTERNAL_MOTOR = 0x0027,\n    INTERNAL_TILT = 0x0028,\n}\n\n\n/**\n * @typedef ErrorCode\n * @param {number} ACK 0x01\n * @param {number} MACK 0x02\n * @param {number} BUFFER_OVERFLOW 0x03\n * @param {number} TIMEOUT 0x04\n * @param {number} COMMAND_NOT_RECOGNIZED 0x05\n * @param {number} INVALID_USE 0x06\n * @param {number} OVERCURRENT 0x07\n * @param {number} INTERNAL_ERROR 0x08\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#error-codes\n */\nexport enum ErrorCode {\n    ACK = 0x01,\n    MACK = 0x02,\n    BUFFER_OVERFLOW = 0x03,\n    TIMEOUT = 0x04,\n    COMMAND_NOT_RECOGNIZED = 0x05,\n    INVALID_USE = 0x06,\n    OVERCURRENT = 0x07,\n    INTERNAL_ERROR = 0x08,\n}\n\n\n/**\n * @typedef HWNetWorkCommandType\n * @param {number} CONNECTION_REQUEST 0x02\n * @param {number} FAMILY_REQUEST 0x03\n * @param {number} FAMILY_SET 0x04\n * @param {number} JOIN_DENIED 0x05\n * @param {number} GET_FAMILY 0x06\n * @param {number} FAMILY 0x07\n * @param {number} GET_SUBFAMILY 0x08\n * @param {number} SUBFAMILY 0x09\n * @param {number} SUBFAMILY_SET 0x0A\n * @param {number} GET_EXTENDED_FAMILY 0x0B\n * @param {number} EXTENDED_FAMILY 0x0C\n * @param {number} EXTENDED_FAMILY_SET 0x0D\n * @param {number} RESET_LONG_PRESS_TIMING 0x0E\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#h-w-network-command-type\n */\nexport enum HWNetWorkCommandType {\n    CONNECTION_REQUEST = 0x02,\n    FAMILY_REQUEST = 0x03,\n    FAMILY_SET = 0x04,\n    JOIN_DENIED = 0x05,\n    GET_FAMILY = 0x06,\n    FAMILY = 0x07,\n    GET_SUBFAMILY = 0x08,\n    SUBFAMILY = 0x09,\n    SUBFAMILY_SET = 0x0A,\n    GET_EXTENDED_FAMILY = 0x0B,\n    EXTENDED_FAMILY = 0x0C,\n    EXTENDED_FAMILY_SET = 0x0D,\n    RESET_LONG_PRESS_TIMING = 0x0E,\n}\n\n\n/**\n * @typedef HWNetworkFamily\n * @param {number} GREEN 0x01\n * @param {number} YELLOW 0x02\n * @param {number} RED 0x03\n * @param {number} BLUE 0x04\n * @param {number} PURPLE 0x05\n * @param {number} LIGHT_BLUE 0x06\n * @param {number} TEAL 0x07\n * @param {number} PINK 0x08\n * @param {number} WHITE 0x00\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#h-w-network-family\n */\nexport enum HWNetworkFamily {\n    GREEN = 0x01,\n    YELLOW = 0x02,\n    RED = 0x03,\n    BLUE = 0x04,\n    PURPLE = 0x05,\n    LIGHT_BLUE = 0x06,\n    TEAL = 0x07,\n    PINK = 0x08,\n    WHITE = 0x00,\n}\n\n\n/**\n * @typedef HWNetworkSubFamily\n * @param {number} ONE_FLASH 0x01\n * @param {number} TWO_FLASHES 0x02\n * @param {number} THREE_FLASHES 0x03\n * @param {number} FOUR_FLASHES 0x04\n * @param {number} FIVE_FLASHES 0x05\n * @param {number} SIX_FLASHES 0x06\n * @param {number} SEVEN_FLASHES 0x07\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#h-w-network-sub-family\n */\nexport enum HWNetworkSubFamily {\n    ONE_FLASH = 0x01,\n    TWO_FLASHES = 0x02,\n    THREE_FLASHES = 0x03,\n    FOUR_FLASHES = 0x04,\n    FIVE_FLASHES = 0x05,\n    SIX_FLASHES = 0x06,\n    SEVEN_FLASHES = 0x07,\n}\n\n\n/**\n * @typedef ModeInformationType\n * @param {number} NAME 0x00\n * @param {number} RAW 0x01\n * @param {number} PCT 0x02\n * @param {number} SI 0x03\n * @param {number} SYMBOL 0x04\n * @param {number} MAPPING 0x05\n * @param {number} USED_INTERNALLY 0x06\n * @param {number} MOTOR_BIAS 0x07\n * @param {number} CAPABILITY_BITS 0x08\n * @param {number} VALUE_FORMAT 0x80\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#mode-information-types\n */\nexport enum ModeInformationType {\n    NAME = 0x00,\n    RAW = 0x01,\n    PCT = 0x02,\n    SI = 0x03,\n    SYMBOL = 0x04,\n    MAPPING = 0x05,\n    USED_INTERNALLY = 0x06,\n    MOTOR_BIAS = 0x07,\n    CAPABILITY_BITS = 0x08,\n    VALUE_FORMAT = 0x80,\n}\n\n\n/**\n * @typedef PortInputFormatSetupSubCommand\n * @param {number} SET_MODEANDDATASET_COMBINATIONS 0x01\n * @param {number} LOCK_LPF2_DEVICE_FOR_SETUP 0x02\n * @param {number} UNLOCKANDSTARTWITHMULTIUPDATEENABLED 0x03\n * @param {number} UNLOCKANDSTARTWITHMULTIUPDATEDISABLED 0x04\n * @param {number} NOT_USED 0x05\n * @param {number} RESET_SENSOR 0x06\n * @description https://lego.github.io/lego-ble-wireless-protocol-docs/index.html#port-input-format-setup-sub-commands\n */\nexport enum PortInputFormatSetupSubCommand {\n    SET_MODEANDDATASET_COMBINATIONS = 0x01,\n    LOCK_LPF2_DEVICE_FOR_SETUP = 0x02,\n    UNLOCKANDSTARTWITHMULTIUPDATEENABLED = 0x03,\n    UNLOCKANDSTARTWITHMULTIUPDATEDISABLED = 0x04,\n    NOT_USED = 0x05,\n    RESET_SENSOR = 0x06,\n}\n\n\n\n","import { EventEmitter } from \"events\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class Device\n * @extends EventEmitter\n */\nexport class Device extends EventEmitter {\n\n    public autoSubscribe: boolean = true;\n    public values: {[event: string]: any} = {};\n\n    protected _mode: number | undefined;\n    protected _busy: boolean = false;\n    protected _finished: (() => void) | undefined;\n\n    private _hub: IDeviceInterface;\n    private _portId: number;\n    private _connected: boolean = true;\n    private _type: Consts.DeviceType;\n    private _modeMap: {[event: string]: number} = {};\n\n    private _isWeDo2SmartHub: boolean;\n    private _isVirtualPort: boolean = false;\n    private _eventTimer: NodeJS.Timer | null = null;\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.UNKNOWN) {\n        super();\n        this._hub = hub;\n        this._portId = portId;\n        this._type = type;\n        this._modeMap = modeMap;\n        this._isWeDo2SmartHub = (this.hub.type === Consts.HubType.WEDO2_SMART_HUB);\n        this._isVirtualPort = this.hub.isPortVirtual(portId);\n\n        const eventAttachListener = (event: string) => {\n            if (event === \"detach\") {\n                return;\n            }\n            if (this.autoSubscribe) {\n                if (this._modeMap[event] !== undefined) {\n                    this.subscribe(this._modeMap[event]);\n                }\n            }\n        };\n\n        const deviceDetachListener = (device: Device) => {\n            if (device.portId === this.portId) {\n                this._connected = false;\n                this.hub.removeListener(\"detach\", deviceDetachListener);\n                this.emit(\"detach\");\n            }\n        };\n\n        for (const event in this._modeMap) {\n            if (this.hub.listenerCount(event) > 0) {\n                eventAttachListener(event);\n            }\n        }\n\n        this.hub.on(\"newListener\", eventAttachListener);\n        this.on(\"newListener\", eventAttachListener);\n        this.hub.on(\"detach\", deviceDetachListener);\n    }\n\n    /**\n     * @readonly\n     * @property {boolean} connected Check if the device is still attached.\n     */\n    public get connected () {\n        return this._connected;\n    }\n\n    /**\n     * @readonly\n     * @property {Hub} hub The Hub the device is attached to.\n     */\n    public get hub () {\n        return this._hub;\n    }\n\n    public get portId () {\n        return this._portId;\n    }\n\n    /**\n     * @readonly\n     * @property {string} portName The port the device is attached to.\n     */\n    public get portName () {\n        return this.hub.getPortNameForPortId(this.portId);\n    }\n\n    /**\n     * @readonly\n     * @property {number} type The type of the device\n     */\n    public get type () {\n        return this._type;\n    }\n\n    public get typeName () {\n        return Consts.DeviceTypeNames[this.type];\n    }\n\n    /**\n     * @readonly\n     * @property {number} mode The mode the device is currently in\n     */\n    public get mode () {\n        return this._mode;\n    }\n\n    protected get isWeDo2SmartHub () {\n        return this._isWeDo2SmartHub;\n    }\n\n    /**\n     * @readonly\n     * @property {boolean} isVirtualPort Is this device attached to a virtual port (ie. a combined device)\n     */\n    protected get isVirtualPort () {\n        return this._isVirtualPort;\n    }\n\n    public writeDirect (mode: number, data: Buffer) {\n        if (this.isWeDo2SmartHub) {\n            return this.send(Buffer.concat([Buffer.from([this.portId, 0x01, 0x02]), data]), Consts.BLECharacteristic.WEDO2_MOTOR_VALUE_WRITE);\n        } else {\n            return this.send(Buffer.concat([Buffer.from([0x81, this.portId, 0x11, 0x51, mode]), data]), Consts.BLECharacteristic.LPF2_ALL);\n        }\n    }\n\n    public send (data: Buffer, characteristic: string = Consts.BLECharacteristic.LPF2_ALL) {\n        this._ensureConnected();\n        return this.hub.send(data, characteristic);\n    }\n\n    public subscribe (mode: number) {\n        this._ensureConnected();\n        if (mode !== this._mode) {\n            this._mode = mode;\n            this.hub.subscribe(this.portId, this.type, mode);\n        }\n    }\n\n    public unsubscribe (mode: number) {\n        this._ensureConnected();\n    }\n\n    public receive (message: Buffer) {\n        this.notify(\"receive\", { message });\n    }\n\n    public notify (event: string, values: any) {\n        this.values[event] = values;\n        this.emit(event, values);\n        if (this.hub.listenerCount(event) > 0) {\n            this.hub.emit(event, this, values);\n        }\n    }\n\n    public requestUpdate () {\n        this.send(Buffer.from([0x21, this.portId, 0x00]));\n    }\n\n    public finish () {\n        this._busy = false;\n        if (this._finished) {\n            this._finished();\n            this._finished = undefined;\n        }\n    }\n\n    public setEventTimer (timer: NodeJS.Timer) {\n        this._eventTimer = timer;\n    }\n\n    public cancelEventTimer () {\n        if (this._eventTimer) {\n            clearTimeout(this._eventTimer);\n            this._eventTimer = null;\n        }\n    }\n\n    private _ensureConnected () {\n        if (!this.connected) {\n            throw new Error(\"Device is not connected\");\n        }\n    }\n\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","import { EventEmitter } from \"events\";\nimport { Device } from \"./devices/device\";\n\n// @ts-ignore\nexport const isWebBluetooth = !!(typeof navigator !== \"undefined\" && navigator && navigator.bluetooth);\n\nexport const toHex = (value: number, length: number = 2) => {\n    return value.toString(16).padStart(length, \"0\");\n};\n\nexport const toBin = (value: number, length: number = 8) => {\n    return value.toString(2).padStart(length, \"0\");\n};\n\nexport const mapSpeed = (speed: number) => {\n    if (speed === 127) {\n        return 127;\n    }\n    if (speed > 100) {\n        speed = 100;\n    } else if (speed < -100) {\n        speed = -100;\n    }\n    return speed;\n};\n\nexport const decodeVersion = (version: number) => {\n    const parts = version.toString(16).padStart(8, \"0\");\n    return [parts[0], parts[1], parts.substring(2, 4), parts.substring(4)].join(\".\");\n};\n\nexport const decodeMACAddress = (address: Uint8Array) => {\n    return Array.from(address).map((part) => toHex(part, 2)).join(\":\");\n};\n\nexport const normalizeAngle = (angle: number) => {\n    if (angle >= 180) {\n        return angle - (360 * ((angle + 180) / 360));\n    } else if (angle < -180) {\n        return angle + (360 * ((180 - angle) / 360));\n    }\n    return angle;\n};\n\nexport const roundAngleToNearest90 = (angle: number) => {\n    angle = normalizeAngle(angle);\n    if (angle < -135) {\n        return -180;\n    }\n    if (angle < -45) {\n        return -90;\n    }\n    if (angle < 45) {\n        return 0;\n    }\n    if (angle < 135) {\n        return 90;\n    }\n    return -180;\n};\n\nexport const calculateRamp = (device: Device, fromPower: number, toPower: number, time: number) => {\n    const emitter = new EventEmitter();\n    const steps = Math.abs(toPower - fromPower);\n    let delay = time / steps;\n    let increment = 1;\n    if (delay < 50 && steps > 0) {\n        increment = 50 / delay;\n        delay = 50;\n    }\n    if (fromPower > toPower) {\n        increment = -increment;\n    }\n    let i = 0;\n    const interval = setInterval(() => {\n        let power = Math.round(fromPower + (++i * increment));\n        if (toPower > fromPower && power > toPower) {\n            power = toPower;\n        } else if (fromPower > toPower && power < toPower) {\n            power = toPower;\n        }\n        emitter.emit(\"changePower\", power);\n        if (power === toPower) {\n            clearInterval(interval);\n            emitter.emit(\"finished\");\n        }\n    }, delay);\n    device.setEventTimer(interval);\n    return emitter;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","import { BaseHub } from \"./basehub\";\n\nimport * as Consts from \"../consts\";\n\nimport { decodeMACAddress, decodeVersion, toBin, toHex } from \"../utils\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"lpf2hub\");\nconst modeInfoDebug = Debug(\"lpf2hubmodeinfo\");\n\n\n/**\n * @class LPF2Hub\n * @extends BaseHub\n */\nexport class LPF2Hub extends BaseHub {\n\n    private _messageBuffer: Buffer = Buffer.alloc(0);\n\n    private _propertyRequestCallbacks: {[property: number]: ((data: Buffer) => void)} = {};\n\n\n    public async connect () {\n        debug(\"LPF2Hub connecting\");\n        await super.connect();\n        await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.LPF2_HUB);\n        this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.LPF2_ALL, this._parseMessage.bind(this));\n        await this._requestHubPropertyReports(0x02); // Activate button reports\n        await this._requestHubPropertyValue(0x03); // Request firmware version\n        await this._requestHubPropertyValue(0x04); // Request hardware version\n        await this._requestHubPropertyReports(0x05); // Activate RSSI updates\n        await this._requestHubPropertyReports(0x06); // Activate battery level reports\n        await this._requestHubPropertyValue(0x0d); // Request primary MAC address\n        this.emit(\"connect\");\n        debug(\"LPF2Hub connected\");\n    }\n\n\n    /**\n     * Shutdown the Hub.\n     * @method LPF2Hub#shutdown\n     * @returns {Promise} Resolved upon successful disconnect.\n     */\n    public shutdown () {\n        return this.send(Buffer.from([0x02, 0x01]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    /**\n     * Set the name of the Hub.\n     * @method LPF2Hub#setName\n     * @param {string} name New name of the hub (14 characters or less, ASCII only).\n     * @returns {Promise} Resolved upon successful issuance of command.\n     */\n    public async setName (name: string) {\n        if (name.length > 14) {\n            throw new Error(\"Name must be 14 characters or less\");\n        }\n        let data = Buffer.from([0x01, 0x01, 0x01]);\n        data = Buffer.concat([data, Buffer.from(name, \"ascii\")]);\n        // Send this twice, as sometimes the first time doesn't take\n        await this.send(data, Consts.BLECharacteristic.LPF2_ALL);\n        await this.send(data, Consts.BLECharacteristic.LPF2_ALL);\n        this._name = name;\n    }\n\n\n    public send (message: Buffer, uuid: string) {\n        message = Buffer.concat([Buffer.alloc(2), message]);\n        message[0] = message.length;\n        debug(\"Sent Message (LPF2_ALL)\", message);\n        return this._bleDevice.writeToCharacteristic(uuid, message);\n    }\n\n\n    public subscribe (portId: number, deviceType: number, mode: number) {\n        return this.send(Buffer.from([0x41, portId, mode, 0x01, 0x00, 0x00, 0x00, 0x01]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    public unsubscribe (portId: number, mode: number) {\n        return this.send(Buffer.from([0x41, portId, mode, 0x01, 0x00, 0x00, 0x00, 0x00]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    /**\n     * Combines two ports with into a single virtual port.\n     *\n     * Note: The devices attached to the ports must be of the same device type.\n     * @method LPF2Hub#createVirtualPort\n     * @param {string} firstPortName First port name\n     * @param {string} secondPortName Second port name\n     * @returns {Promise} Resolved upon successful issuance of command.\n     */\n    public createVirtualPort (firstPortName: string, secondPortName: string) {\n        const firstDevice = this.getDeviceAtPort(firstPortName);\n        if (!firstDevice) {\n            throw new Error(`Port ${firstPortName} does not have an attached device`);\n        }\n        const secondDevice = this.getDeviceAtPort(secondPortName);\n        if (!secondDevice) {\n            throw new Error(`Port ${secondPortName} does not have an attached device`);\n        }\n        if (firstDevice.type !== secondDevice.type) {\n            throw new Error(`Both devices must be of the same type to create a virtual port`);\n        }\n        return this.send(Buffer.from([0x61, 0x01, firstDevice.portId, secondDevice.portId]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    protected _checkFirmware (version: string) {\n        return;\n    }\n\n\n    private _parseMessage (data?: Buffer) {\n\n        if (data) {\n            this._messageBuffer = Buffer.concat([this._messageBuffer, data]);\n        }\n\n        if (this._messageBuffer.length <= 0) {\n            return;\n        }\n\n        const len = this._messageBuffer[0];\n        if (len >= this._messageBuffer.length) {\n\n            const message = this._messageBuffer.slice(0, len);\n            this._messageBuffer = this._messageBuffer.slice(len);\n\n            debug(\"Received Message (LPF2_ALL)\", message);\n\n            switch (message[2]) {\n                case 0x01: {\n                    const property = message[3];\n                    const callback = this._propertyRequestCallbacks[property];\n                    if (callback) {\n                        callback(message);\n                    } else {\n                        this._parseHubPropertyResponse(message);\n                    }\n                    delete this._propertyRequestCallbacks[property];\n                    break;\n                }\n                case 0x04: {\n                    this._parsePortMessage(message);\n                    break;\n                }\n                case 0x43: {\n                    this._parsePortInformationResponse(message);\n                    break;\n                }\n                case 0x44: {\n                    this._parseModeInformationResponse(message);\n                    break;\n                }\n                case 0x45: {\n                    this._parseSensorMessage(message);\n                    break;\n                }\n                case 0x82: {\n                    this._parsePortAction(message);\n                    break;\n                }\n            }\n\n            if (this._messageBuffer.length > 0) {\n                this._parseMessage();\n            }\n\n        }\n    }\n\n\n    private _requestHubPropertyValue (property: number) {\n        return new Promise((resolve) => {\n            this._propertyRequestCallbacks[property] = (message) => {\n                this._parseHubPropertyResponse(message);\n                return resolve();\n            };\n            this.send(Buffer.from([0x01, property, 0x05]), Consts.BLECharacteristic.LPF2_ALL);\n        });\n    }\n\n\n    private _requestHubPropertyReports (property: number) {\n        return this.send(Buffer.from([0x01, property, 0x02]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    private _parseHubPropertyResponse (message: Buffer) {\n\n        // Button press reports\n        if (message[3] === 0x02) {\n            if (message[5] === 1) {\n                /**\n                 * Emits when a button is pressed.\n                 * @event LPF2Hub#button\n                 * @param {string} button\n                 * @param {ButtonState} state\n                 */\n                this.emit(\"button\", { event: Consts.ButtonState.PRESSED });\n                return;\n            } else if (message[5] === 0) {\n                this.emit(\"button\", { event: Consts.ButtonState.RELEASED });\n                return;\n            }\n\n        // Firmware version\n        } else if (message[3] === 0x03) {\n            this._firmwareVersion = decodeVersion(message.readInt32LE(5));\n            this._checkFirmware(this._firmwareVersion);\n\n        // Hardware version\n        } else if (message[3] === 0x04) {\n            this._hardwareVersion = decodeVersion(message.readInt32LE(5));\n\n        // RSSI update\n        } else if (message[3] === 0x05) {\n            const rssi = message.readInt8(5);\n            if (rssi !== 0) {\n                this._rssi = rssi;\n                this.emit(\"rssi\", { rssi: this._rssi });\n            }\n\n        // primary MAC Address\n        } else if (message[3] === 0x0d) {\n            this._primaryMACAddress = decodeMACAddress(message.slice(5));\n\n        // Battery level reports\n        } else if (message[3] === 0x06) {\n            const batteryLevel = message[5];\n            if (batteryLevel !== this._batteryLevel) {\n                this._batteryLevel = batteryLevel;\n                this.emit(\"batteryLevel\", { batteryLevel });\n            }\n        }\n\n    }\n\n    private async _parsePortMessage (message: Buffer) {\n\n        const portId = message[3];\n        const event = message[4];\n        const deviceType = event ? message.readUInt16LE(5) : 0;\n\n        // Handle device attachments\n        if (event === 0x01) {\n\n            if (modeInfoDebug.enabled) {\n                const deviceTypeName = Consts.DeviceTypeNames[message[5]] || \"Unknown\";\n                modeInfoDebug(`Port ${toHex(portId)}, type ${toHex(deviceType, 4)} (${deviceTypeName})`);\n                const hwVersion = decodeVersion(message.readInt32LE(7));\n                const swVersion = decodeVersion(message.readInt32LE(11));\n                modeInfoDebug(`Port ${toHex(portId)}, hardware version ${hwVersion}, software version ${swVersion}`);\n                await this._sendPortInformationRequest(portId);\n            }\n\n            const device = this._createDevice(deviceType, portId);\n            this._attachDevice(device);\n\n        // Handle device detachments\n        } else if (event === 0x00) {\n            const device = this._getDeviceByPortId(portId);\n            if (device) {\n                this._detachDevice(device);\n                if (this.isPortVirtual(portId)) {\n                    const portName = this.getPortNameForPortId(portId);\n                    if (portName) {\n                        delete this._portMap[portName];\n                    }\n                    this._virtualPorts = this._virtualPorts.filter((virtualPortId) => virtualPortId !== portId);\n                }\n            }\n\n        // Handle virtual port creation\n        } else if (event === 0x02) {\n            const firstPortName = this.getPortNameForPortId(message[7]);\n            const secondPortName = this.getPortNameForPortId(message[8]);\n            // @ts-ignore NK These should never be undefined\n            const virtualPortName = firstPortName + secondPortName;\n            const virtualPortId = message[3];\n            this._portMap[virtualPortName] = virtualPortId;\n            this._virtualPorts.push(virtualPortId);\n            const device = this._createDevice(deviceType, virtualPortId);\n            this._attachDevice(device);\n        }\n\n    }\n\n\n    private async _sendPortInformationRequest (port: number) {\n        await this.send(Buffer.from([0x21, port, 0x01]), Consts.BLECharacteristic.LPF2_ALL);\n        await this.send(Buffer.from([0x21, port, 0x02]), Consts.BLECharacteristic.LPF2_ALL); // Mode combinations\n    }\n\n\n    private async _parsePortInformationResponse (message: Buffer) {\n        const port = message[3];\n        if (message[4] === 2) {\n            const modeCombinationMasks: number[] = [];\n            for (let i = 5; i < message.length; i += 2) {\n                modeCombinationMasks.push(message.readUInt16LE(i));\n            }\n            modeInfoDebug(`Port ${toHex(port)}, mode combinations [${modeCombinationMasks.map((c) => toBin(c, 0)).join(\", \")}]`);\n            return;\n        }\n        const count = message[6];\n        const input = toBin(message.readUInt16LE(7), count);\n        const output = toBin(message.readUInt16LE(9), count);\n        modeInfoDebug(`Port ${toHex(port)}, total modes ${count}, input modes ${input}, output modes ${output}`);\n\n        for (let i = 0; i < count; i++) {\n            await this._sendModeInformationRequest(port, i, 0x00); // Mode Name\n            await this._sendModeInformationRequest(port, i, 0x01); // RAW Range\n            await this._sendModeInformationRequest(port, i, 0x02); // PCT Range\n            await this._sendModeInformationRequest(port, i, 0x03); // SI Range\n            await this._sendModeInformationRequest(port, i, 0x04); // SI Symbol\n            await this._sendModeInformationRequest(port, i, 0x80); // Value Format\n        }\n    }\n\n\n    private _sendModeInformationRequest (port: number, mode: number, type: number) {\n        return this.send(Buffer.from([0x22, port, mode, type]), Consts.BLECharacteristic.LPF2_ALL);\n    }\n\n\n    private _parseModeInformationResponse (message: Buffer) {\n        const port = toHex(message[3]);\n        const mode = message[4];\n        const type = message[5];\n        switch (type) {\n            case 0x00: // Mode Name\n                modeInfoDebug(`Port ${port}, mode ${mode}, name ${message.slice(6, message.length).toString()}`);\n                break;\n            case 0x01: // RAW Range\n                modeInfoDebug(`Port ${port}, mode ${mode}, RAW min ${message.readFloatLE(6)}, max ${message.readFloatLE(10)}`);\n                break;\n            case 0x02: // PCT Range\n                modeInfoDebug(`Port ${port}, mode ${mode}, PCT min ${message.readFloatLE(6)}, max ${message.readFloatLE(10)}`);\n                break;\n            case 0x03: // SI Range\n                modeInfoDebug(`Port ${port}, mode ${mode}, SI min ${message.readFloatLE(6)}, max ${message.readFloatLE(10)}`);\n                break;\n            case 0x04: // SI Symbol\n                modeInfoDebug(`Port ${port}, mode ${mode}, SI symbol ${message.slice(6, message.length).toString()}`);\n                break;\n            case 0x80: // Value Format\n                const numValues = message[6];\n                const dataType = [\"8bit\", \"16bit\", \"32bit\", \"float\"][message[7]];\n                const totalFigures = message[8];\n                const decimals = message[9];\n                modeInfoDebug(`Port ${port}, mode ${mode}, Value ${numValues} x ${dataType}, Decimal format ${totalFigures}.${decimals}`);\n        }\n    }\n\n\n    private _parsePortAction (message: Buffer) {\n\n        const portId = message[3];\n        const device = this._getDeviceByPortId(portId);\n\n        if (device) {\n            const finished = (message[4] === 0x0a);\n            if (finished) {\n                device.finish();\n            }\n        }\n\n    }\n\n\n    private _parseSensorMessage (message: Buffer) {\n\n        const portId = message[3];\n        const device = this._getDeviceByPortId(portId);\n\n        if (device) {\n            device.receive(message);\n        }\n\n    }\n\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\nimport { calculateRamp, mapSpeed } from \"../utils\";\n\n/**\n * @class BasicMotor\n * @extends Device\n */\nexport class BasicMotor extends Device {\n\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number}, type: Consts.DeviceType = Consts.DeviceType.UNKNOWN) {\n        super(hub, portId, modeMap, type);\n    }\n\n\n    /**\n     * Set the motor power.\n     * @method BasicMotor#setPower\n     * @param {number} power For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100. Stop is 0.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setPower (power: number, interrupt: boolean = true) {\n        if (interrupt) {\n            this.cancelEventTimer();\n        }\n        return this.writeDirect(0x00, Buffer.from([mapSpeed(power)]));\n    }\n\n\n    /**\n     * Ramp the motor power.\n     * @method BasicMotor#rampPower\n     * @param {number} fromPower For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100. Stop is 0.\n     * @param {number} toPower For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100. Stop is 0.\n     * @param {number} time How long the ramp should last (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command.\n     */\n    public rampPower (fromPower: number, toPower: number, time: number) {\n        this.cancelEventTimer();\n        return new Promise((resolve) => {\n            calculateRamp(this, fromPower, toPower, time)\n            .on(\"changePower\", (power) => {\n                this.setPower(power, false);\n            })\n            .on(\"finished\", resolve);\n        });\n    }\n\n\n    /**\n     * Stop the motor.\n     * @method BasicMotor#stop\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public stop () {\n        this.cancelEventTimer();\n        return this.setPower(0);\n    }\n\n\n    /**\n     * Brake the motor.\n     * @method BasicMotor#brake\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public brake () {\n        this.cancelEventTimer();\n        return this.setPower(Consts.BrakingStyle.BRAKE);\n    }\n\n\n}\n","import { TachoMotor } from \"./tachomotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\nimport { mapSpeed, normalizeAngle, roundAngleToNearest90 } from \"../utils\";\n\n/**\n * @class AbsoluteMotor\n * @extends TachoMotor\n */\nexport class AbsoluteMotor extends TachoMotor {\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.UNKNOWN) {\n        super(hub, portId, Object.assign({}, modeMap, ModeMap), type);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.ABSOLUTE:\n                const angle = normalizeAngle(message.readInt16LE(this.isWeDo2SmartHub ? 2 : 4));\n                /**\n                 * Emits when a the motors absolute position is changed.\n                 * @event AbsoluteMotor#absolute\n                 * @type {object}\n                 * @param {number} absolute\n                 */\n                this.notify(\"absolute\", { angle });\n                break;\n            default:\n                super.receive(message);\n                break;\n        }\n    }\n\n    /**\n     * Rotate a motor by a given angle.\n     * @method AbsoluteMotor#gotoAngle\n     * @param {number} angle Absolute position the motor should go to (degrees from 0).\n     * @param {number} [speed=100] For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100.\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public gotoAngle (angle: [number, number] | number, speed: number = 100) {\n        if (!this.isVirtualPort && angle instanceof Array) {\n            throw new Error(\"Only virtual ports can accept multiple positions\");\n        }\n        if (this.isWeDo2SmartHub) {\n            throw new Error(\"Absolute positioning is not available on the WeDo 2.0 Smart Hub\");\n        }\n        this.cancelEventTimer();\n        return new Promise((resolve) => {\n            this._busy = true;\n            if (speed === undefined || speed === null) {\n                speed = 100;\n            }\n            let message;\n            if (angle instanceof Array) {\n                message = Buffer.from([0x81, this.portId, 0x11, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, mapSpeed(speed), this._maxPower, this._brakeStyle, this.useProfile()]);\n                message.writeInt32LE(normalizeAngle(angle[0]), 4);\n                message.writeInt32LE(normalizeAngle(angle[1]), 8);\n            } else {\n                message = Buffer.from([0x81, this.portId, 0x11, 0x0d, 0x00, 0x00, 0x00, 0x00, mapSpeed(speed), this._maxPower, this._brakeStyle, this.useProfile()]);\n                message.writeInt32LE(normalizeAngle(angle), 4);\n            }\n            this.send(message);\n            this._finished = () => {\n                return resolve();\n            };\n        });\n    }\n\n\n    /**\n     * Rotate motor to real zero position.\n     *\n     * Real zero is marked on Technic angular motors (SPIKE Prime). It is also available on Technic linear motors (Control+) but is unmarked.\n     * @method AbsoluteMotor#gotoRealZero\n     * @param {number} [speed=100] Speed between 1 - 100. Note that this will always take the shortest path to zero.\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public gotoRealZero (speed: number = 100) {\n        return new Promise((resolve) => {\n            const oldMode = this.mode;\n            let calibrated = false;\n            this.on(\"absolute\", async ({ angle }) => {\n                if (!calibrated) {\n                    calibrated = true;\n                    if (angle < 0) {\n                        angle = Math.abs(angle);\n                    } else {\n                        speed = -speed;\n                    }\n                    await this.rotateByDegrees(angle, speed);\n                    if (oldMode) {\n                        this.subscribe(oldMode);\n                    }\n                    return resolve();\n                }\n            });\n            this.requestUpdate();\n        });\n    }\n\n\n    /**\n     * Reset zero to current position\n     * @method AbsoluteMotor#resetZero\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public resetZero () {\n        return new Promise((resolve) => {\n            const data = Buffer.from([0x81, this.portId, 0x11, 0x51, 0x02, 0x00, 0x00, 0x00, 0x00]);\n            this.send(data);\n            return resolve();\n        });\n    }\n\n\n}\n\nexport enum Mode {\n    ROTATION = 0x02,\n    ABSOLUTE = 0x03\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"rotate\": Mode.ROTATION,\n    \"absolute\": Mode.ABSOLUTE\n};\n","import { BasicMotor } from \"./basicmotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\nimport { mapSpeed } from \"../utils\";\n\n/**\n * @class TachoMotor\n * @extends BasicMotor\n */\nexport class TachoMotor extends BasicMotor {\n\n    protected _brakeStyle: Consts.BrakingStyle = Consts.BrakingStyle.BRAKE;\n    protected _maxPower: number = 100;\n    public useAccelerationProfile: boolean = true;\n    public useDecelerationProfile: boolean = true;\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.UNKNOWN) {\n        super(hub, portId, Object.assign({}, modeMap, ModeMap), type);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.ROTATION:\n                const degrees = message.readInt32LE(this.isWeDo2SmartHub ? 2 : 4);\n                /**\n                 * Emits when a rotation sensor is activated.\n                 * @event TachoMotor#rotate\n                 * @type {object}\n                 * @param {number} rotation\n                 */\n                this.notify(\"rotate\", { degrees });\n                break;\n        }\n    }\n\n\n    /**\n     * Set the braking style of the motor.\n     *\n     * Note: This applies to setSpeed, rotateByDegrees, and gotoAngle.\n     * @method TachoMotor#setBrakingStyle\n     * @param {number} style Either BRAKE or HOLD\n     */\n    public setBrakingStyle (style: Consts.BrakingStyle) {\n        this._brakeStyle = style;\n    }\n\n\n    /**\n     * Set the max power of the motor.\n     *\n     * Note: This applies to setSpeed, rotateByDegrees, and gotoAngle.\n     * @method TachoMotor#setMaxPower\n     * @param {number} style Either BRAKE or HOLD\n     */\n    public setMaxPower (maxPower: number) {\n        this._maxPower = maxPower;\n    }\n\n\n    /**\n     * Set the global acceleration time\n     * @method TachoMotor#setAccelerationTime\n     * @param {number} time How long acceleration should last (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public setAccelerationTime (time: number, profile: number = 0x00) {\n        const message = Buffer.from([0x81, this.portId, 0x11, 0x05, 0x00, 0x00, profile]);\n        message.writeUInt16LE(time, 4);\n        this.send(message);\n    }\n\n\n    /**\n     * Set the global deceleration time\n     * @method TachoMotor#setDecelerationTime\n     * @param {number} time How long deceleration should last (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public setDecelerationTime (time: number, profile: number = 0x00) {\n        const message = Buffer.from([0x81, this.portId, 0x11, 0x06, 0x00, 0x00, profile]);\n        message.writeUInt16LE(time, 4);\n        this.send(message);\n    }\n\n\n    /**\n     * Set the motor speed.\n     * @method TachoMotor#setSpeed\n     * @param {number} speed For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100. Stop is 0.\n     * @param {number} time How long the motor should run for (in milliseconds).\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setSpeed (speed: [number, number] | number, time: number | undefined) {\n        if (!this.isVirtualPort && speed instanceof Array) {\n            throw new Error(\"Only virtual ports can accept multiple speeds\");\n        }\n        if (this.isWeDo2SmartHub) {\n            throw new Error(\"Motor speed is not available on the WeDo 2.0 Smart Hub\");\n        }\n        this.cancelEventTimer();\n        return new Promise((resolve) => {\n            this._busy = true;\n            if (speed === undefined || speed === null) {\n                speed = 100;\n            }\n            let message;\n            if (time !== undefined) {\n                if (speed instanceof Array) {\n                    message = Buffer.from([0x81, this.portId, 0x11, 0x0a, 0x00, 0x00, mapSpeed(speed[0]), mapSpeed(speed[1]), this._maxPower, this._brakeStyle, this.useProfile()]);\n                } else {\n                    message = Buffer.from([0x81, this.portId, 0x11, 0x09, 0x00, 0x00, mapSpeed(speed), this._maxPower, this._brakeStyle, this.useProfile()]);\n                }\n                message.writeUInt16LE(time, 4);\n            } else {\n                if (speed instanceof Array) {\n                    message = Buffer.from([0x81, this.portId, 0x11, 0x08, mapSpeed(speed[0]), mapSpeed(speed[1]), this._maxPower, this.useProfile()]);\n                } else {\n                    message = Buffer.from([0x81, this.portId, 0x11, 0x07, mapSpeed(speed), this._maxPower, this.useProfile()]);\n                }\n            }\n            this.send(message);\n            this._finished = () => {\n                return resolve();\n            };\n        });\n    }\n\n    /**\n     * Rotate a motor by a given amount of degrees.\n     * @method TachoMotor#rotateByDegrees\n     * @param {number} degrees How much the motor should be rotated (in degrees).\n     * @param {number} [speed=100] For forward, a value between 1 - 100 should be set. For reverse, a value between -1 to -100.\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the motor is finished).\n     */\n    public rotateByDegrees (degrees: number, speed: [number, number] | number) {\n        if (!this.isVirtualPort && speed instanceof Array) {\n            throw new Error(\"Only virtual ports can accept multiple speeds\");\n        }\n        if (this.isWeDo2SmartHub) {\n            throw new Error(\"Rotation is not available on the WeDo 2.0 Smart Hub\");\n        }\n        this.cancelEventTimer();\n        return new Promise((resolve) => {\n            this._busy = true;\n            if (speed === undefined || speed === null) {\n                speed = 100;\n            }\n            let message;\n            if (speed instanceof Array) {\n                message = Buffer.from([0x81, this.portId, 0x11, 0x0c, 0x00, 0x00, 0x00, 0x00, mapSpeed(speed[0]), mapSpeed(speed[1]), this._maxPower, this._brakeStyle, this.useProfile()]);\n            } else {\n                message = Buffer.from([0x81, this.portId, 0x11, 0x0b, 0x00, 0x00, 0x00, 0x00, mapSpeed(speed), this._maxPower, this._brakeStyle, this.useProfile()]);\n            }\n            message.writeUInt32LE(degrees, 4);\n            this.send(message);\n            this._finished = () => {\n                return resolve();\n            };\n        });\n    }\n\n\n    protected useProfile () {\n        let value = 0x00;\n        if (this.useAccelerationProfile) {\n            value += 0x01;\n        }\n        if (this.useDecelerationProfile) {\n            value += 0x02;\n        }\n        return value;\n    }\n\n\n}\n\nexport enum Mode {\n    ROTATION = 0x02\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"rotate\": Mode.ROTATION\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import { EventEmitter } from \"events\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { ColorDistanceSensor } from \"../devices/colordistancesensor\";\nimport { CurrentSensor } from \"../devices/currentsensor\";\nimport { Device } from \"../devices/device\";\n\nimport { DuploTrainBaseColorSensor } from \"../devices/duplotrainbasecolorsensor\";\nimport { DuploTrainBaseMotor } from \"../devices/duplotrainbasemotor\";\nimport { DuploTrainBaseSpeaker } from \"../devices/duplotrainbasespeaker\";\nimport { DuploTrainBaseSpeedometer } from \"../devices/duplotrainbasespeedometer\";\n\nimport { HubLED } from \"../devices/hubled\";\nimport { Light } from \"../devices/light\";\nimport { MediumLinearMotor } from \"../devices/mediumlinearmotor\";\nimport { MotionSensor } from \"../devices/motionsensor\";\nimport { MoveHubMediumLinearMotor } from \"../devices/movehubmediumlinearmotor\";\nimport { MoveHubTiltSensor } from \"../devices/movehubtiltsensor\";\nimport { PiezoBuzzer } from \"../devices/piezobuzzer\";\nimport { RemoteControlButton } from \"../devices/remotecontrolbutton\";\nimport { SimpleMediumLinearMotor } from \"../devices/simplemediumlinearmotor\";\nimport { TechnicColorSensor } from \"../devices/techniccolorsensor\";\nimport { TechnicDistanceSensor } from \"../devices/technicdistancesensor\";\nimport { TechnicForceSensor } from \"../devices/technicforcesensor\";\nimport { TechnicLargeAngularMotor } from \"../devices/techniclargeangularmotor\";\nimport { TechnicLargeLinearMotor } from \"../devices/techniclargelinearmotor\";\nimport { TechnicMediumAngularMotor } from \"../devices/technicmediumangularmotor\";\nimport { TechnicMediumHubAccelerometerSensor } from \"../devices/technicmediumhubaccelerometersensor\";\nimport { TechnicMediumHubGyroSensor } from \"../devices/technicmediumhubgyrosensor\";\nimport { TechnicMediumHubTiltSensor } from \"../devices/technicmediumhubtiltsensor\";\nimport { TechnicXLargeLinearMotor } from \"../devices/technicxlargelinearmotor\";\nimport { TiltSensor } from \"../devices/tiltsensor\";\nimport { TrainMotor } from \"../devices/trainmotor\";\nimport { VoltageSensor } from \"../devices/voltagesensor\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"basehub\");\n\n\n/**\n * @class BaseHub\n * @extends EventEmitter\n */\nexport class BaseHub extends EventEmitter {\n\n    protected _attachedDevices: {[portId: number]: Device} = {};\n\n    protected _name: string = \"\";\n    protected _firmwareVersion: string = \"0.0.00.0000\";\n    protected _hardwareVersion: string = \"0.0.00.0000\";\n    protected _primaryMACAddress: string = \"00:00:00:00:00:00\";\n    protected _batteryLevel: number = 100;\n    protected _rssi: number = -60;\n    protected _portMap: {[portName: string]: number} = {};\n    protected _virtualPorts: number[] = [];\n\n    protected _bleDevice: IBLEAbstraction;\n\n    private _type: Consts.HubType;\n    private _attachCallbacks: ((device: Device) => boolean)[] = [];\n\n    constructor (bleDevice: IBLEAbstraction, portMap: {[portName: string]: number} = {}, type: Consts.HubType = Consts.HubType.UNKNOWN) {\n        super();\n        this.setMaxListeners(23); // Technic Medium Hub has 9 built in devices + 4 external ports. Node.js throws a warning after 10 attached event listeners.\n        this._type = type;\n        this._bleDevice = bleDevice;\n        this._portMap = Object.assign({}, portMap);\n        bleDevice.on(\"disconnect\", () => {\n            /**\n             * Emits when the hub is disconnected.\n             * @event Hub#disconnect\n             */\n            this.emit(\"disconnect\");\n        });\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} name Name of the hub\n     */\n    public get name () {\n        return this._bleDevice.name;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} type Hub type\n     */\n    public get type () {\n        return this._type;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string[]} ports Array of port names\n     */\n    public get ports () {\n        return Object.keys(this._portMap);\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} firmwareVersion Firmware version of the hub\n     */\n    public get firmwareVersion () {\n        return this._firmwareVersion;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} hardwareVersion Hardware version of the hub\n     */\n    public get hardwareVersion () {\n        return this._hardwareVersion;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} primaryMACAddress Primary MAC address of the hub\n     */\n    public get primaryMACAddress () {\n        return this._primaryMACAddress;\n    }\n\n\n    /**\n     * @readonly\n     * @property {string} uuid UUID of the hub\n     */\n    public get uuid () {\n        return this._bleDevice.uuid;\n    }\n\n\n    /**\n     * @readonly\n     * @property {number} batteryLevel Battery level of the hub (Percentage between 0-100)\n     */\n    public get batteryLevel () {\n        return this._batteryLevel;\n    }\n\n\n    /**\n     * @readonly\n     * @property {number} rssi Signal strength of the hub\n     */\n    public get rssi () {\n        return this._rssi;\n    }\n\n\n    /**\n     * Connect to the Hub.\n     * @method Hub#connect\n     * @returns {Promise} Resolved upon successful connect.\n     */\n    public connect () {\n        if (this._bleDevice.connecting) {\n            throw new Error(\"Already connecting\");\n        } else if (this._bleDevice.connected) {\n            throw new Error(\"Already connected\");\n        }\n        return this._bleDevice.connect();\n    }\n\n\n    /**\n     * Disconnect the Hub.\n     * @method Hub#disconnect\n     * @returns {Promise} Resolved upon successful disconnect.\n     */\n    public disconnect () {\n        return this._bleDevice.disconnect();\n    }\n\n\n    /**\n     * Retrieves the device attached to a given port.\n     * @method Hub#getDeviceAtPort\n     * @param {string} portName The name of the port to retrieve the device from.\n     * @returns {Device | undefined} The device attached to the port.\n     */\n    public getDeviceAtPort (portName: string) {\n        const portId = this._portMap[portName];\n        if (portId !== undefined) {\n            return this._attachedDevices[portId];\n        } else {\n            return undefined;\n        }\n    }\n\n\n    /**\n     * Retrieves the device attached to a given port, waiting until one is attached if there isn't one.\n     *\n     * Note: If a device is never attached, the returned promise may never resolve.\n     * @method Hub#waitForDeviceAtPort\n     * @param {string} portName The name of the port to retrieve the device from.\n     * @returns {Promise} Resolved once a device is attached, or resolved immediately if a device is already attached.\n     */\n    public waitForDeviceAtPort (portName: string) {\n        return new Promise((resolve) => {\n            const existingDevice = this.getDeviceAtPort(portName);\n            if (existingDevice) {\n                return resolve(existingDevice);\n            }\n            this._attachCallbacks.push((device) => {\n                if (device.portName === portName) {\n                    resolve(device);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n        });\n    }\n\n\n    /**\n     * Retrieves all attached devices.\n     * @method Hub#getDevices\n     * @returns {Device[]} Array of all attached devices.\n     */\n    public getDevices () {\n        return Object.values(this._attachedDevices);\n    }\n\n\n    /**\n     * Retrieves an array of devices of the specified type.\n     * @method Hub#getDevicesByType\n     * @param {number} deviceType The device type to lookup.\n     * @returns {Device[]} Array of all devices of the specified type.\n     */\n    public getDevicesByType (deviceType: number) {\n        return this.getDevices().filter((device) => device.type === deviceType);\n    }\n\n\n    /**\n     * Retrieves the first device attached of the specified type, waiting until one is attached if there isn't one.\n     *\n     * Note: If a device is never attached, the returned promise may never resolve.\n     * @method Hub#waitForDeviceByType\n     * @param {number} deviceType The device type to lookup.\n     * @returns {Promise} Resolved once a device is attached, or resolved immediately if a device is already attached.\n     */\n    public waitForDeviceByType (deviceType: number) {\n        return new Promise((resolve) => {\n            const existingDevices = this.getDevicesByType(deviceType);\n            if (existingDevices.length >= 1) {\n                return resolve(existingDevices[0]);\n            }\n            this._attachCallbacks.push((device) => {\n                if (device.type === deviceType) {\n                    resolve(device);\n                    return true;\n                } else {\n                    return false;\n                }\n            });\n        });\n    }\n\n\n    public getPortNameForPortId (portId: number) {\n        for (const port of Object.keys(this._portMap)) {\n            if (this._portMap[port] === portId) {\n                return port;\n            }\n        }\n        return;\n    }\n\n\n    public isPortVirtual (portId: number) {\n        return (this._virtualPorts.indexOf(portId) > -1);\n    }\n\n\n    /**\n     * Sleep a given amount of time.\n     *\n     * Note: This is a helper method to make it easier to add delays into a chain of commands.\n     * @method Hub#sleep\n     * @param {number} delay How long to sleep (in milliseconds).\n     * @returns {Promise} Resolved after the delay is finished.\n     */\n    public sleep (delay: number) {\n        return new Promise((resolve) => {\n            global.setTimeout(resolve, delay);\n        });\n    }\n\n\n    /**\n     * Wait until a given list of concurrently running commands are complete.\n     *\n     * Note: This is a helper method to make it easier to wait for concurrent commands to complete.\n     * @method Hub#wait\n     * @param {Array<Promise<any>>} commands Array of executing commands.\n     * @returns {Promise} Resolved after the commands are finished.\n     */\n    public wait (commands: Promise<any>[]) {\n        return Promise.all(commands);\n    }\n\n\n    public send (message: Buffer, uuid: string) {\n        return Promise.resolve();\n    }\n\n\n    public subscribe (portId: number, deviceType: number, mode: number) {\n        // NK Do nothing here\n    }\n\n\n    public unsubscribe (portId: number, deviceType: number, mode: number) {\n        // NK Do nothing here\n    }\n\n\n    public manuallyAttachDevice(deviceType: number, portId: number) {\n        if (!this._attachedDevices[portId]) {\n            debug(`No device attached to portId ${portId}, creating and attaching device type ${deviceType}`);\n            const device = this._createDevice(deviceType, portId);\n            this._attachDevice(device);\n            return device;\n        } else {\n            if (this._attachedDevices[portId].type === deviceType) {\n                debug(`Device of ${deviceType} already attached to portId ${portId}, returning existing device`);\n                return this._attachedDevices[portId];\n            } else {\n                throw new Error(`Already a different type of device attached to portId ${portId}. Only use this method when you are certain what's attached.`);\n            }\n        }\n    }\n\n\n    protected _attachDevice (device: Device) {\n        if (this._attachedDevices[device.portId] && this._attachedDevices[device.portId].type === device.type) {\n            return;\n        }\n        this._attachedDevices[device.portId] = device;\n\n        /**\n         * Emits when a device is attached to the Hub.\n         * @event Hub#attach\n         * @param {Device} device\n         */\n        this.emit(\"attach\", device);\n        debug(`Attached device type ${device.type} (${Consts.DeviceTypeNames[device.type]}) on port ${device.portName} (${device.portId})`);\n\n        let i = this._attachCallbacks.length;\n        while (i--) {\n            const callback = this._attachCallbacks[i];\n            if (callback(device)) {\n                this._attachCallbacks.splice(i, 1);\n            }\n        }\n    }\n\n\n    protected _detachDevice (device: Device) {\n        delete this._attachedDevices[device.portId];\n        /**\n         * Emits when a device is detached from the Hub.\n         * @event Hub#detach\n         * @param {Device} device\n         */\n        this.emit(\"detach\", device);\n        debug(`Detached device type ${device.type} (${Consts.DeviceTypeNames[device.type]}) on port ${device.portName} (${device.portId})`);\n    }\n\n\n    protected _createDevice (deviceType: number, portId: number) {\n        let constructor;\n\n        // NK TODO: This needs to go in a better place\n        const deviceConstructors: {[type: number]: typeof Device} = {\n            [Consts.DeviceType.LIGHT]: Light,\n            [Consts.DeviceType.TRAIN_MOTOR]: TrainMotor,\n            [Consts.DeviceType.SIMPLE_MEDIUM_LINEAR_MOTOR]: SimpleMediumLinearMotor,\n            [Consts.DeviceType.MOVE_HUB_MEDIUM_LINEAR_MOTOR]: MoveHubMediumLinearMotor,\n            [Consts.DeviceType.MOTION_SENSOR]: MotionSensor,\n            [Consts.DeviceType.TILT_SENSOR]: TiltSensor,\n            [Consts.DeviceType.MOVE_HUB_TILT_SENSOR]: MoveHubTiltSensor,\n            [Consts.DeviceType.PIEZO_BUZZER]: PiezoBuzzer,\n            [Consts.DeviceType.TECHNIC_COLOR_SENSOR]: TechnicColorSensor,\n            [Consts.DeviceType.TECHNIC_DISTANCE_SENSOR]: TechnicDistanceSensor,\n            [Consts.DeviceType.TECHNIC_FORCE_SENSOR]: TechnicForceSensor,\n            [Consts.DeviceType.TECHNIC_MEDIUM_HUB_TILT_SENSOR]: TechnicMediumHubTiltSensor,\n            [Consts.DeviceType.TECHNIC_MEDIUM_HUB_GYRO_SENSOR]: TechnicMediumHubGyroSensor,\n            [Consts.DeviceType.TECHNIC_MEDIUM_HUB_ACCELEROMETER]: TechnicMediumHubAccelerometerSensor,\n            [Consts.DeviceType.MEDIUM_LINEAR_MOTOR]: MediumLinearMotor,\n            [Consts.DeviceType.TECHNIC_MEDIUM_ANGULAR_MOTOR]: TechnicMediumAngularMotor,\n            [Consts.DeviceType.TECHNIC_LARGE_ANGULAR_MOTOR]: TechnicLargeAngularMotor,\n            [Consts.DeviceType.TECHNIC_LARGE_LINEAR_MOTOR]: TechnicLargeLinearMotor,\n            [Consts.DeviceType.TECHNIC_XLARGE_LINEAR_MOTOR]: TechnicXLargeLinearMotor,\n            [Consts.DeviceType.COLOR_DISTANCE_SENSOR]: ColorDistanceSensor,\n            [Consts.DeviceType.VOLTAGE_SENSOR]: VoltageSensor,\n            [Consts.DeviceType.CURRENT_SENSOR]: CurrentSensor,\n            [Consts.DeviceType.REMOTE_CONTROL_BUTTON]: RemoteControlButton,\n            [Consts.DeviceType.HUB_LED]: HubLED,\n            [Consts.DeviceType.DUPLO_TRAIN_BASE_COLOR_SENSOR]: DuploTrainBaseColorSensor,\n            [Consts.DeviceType.DUPLO_TRAIN_BASE_MOTOR]: DuploTrainBaseMotor,\n            [Consts.DeviceType.DUPLO_TRAIN_BASE_SPEAKER]: DuploTrainBaseSpeaker,\n            [Consts.DeviceType.DUPLO_TRAIN_BASE_SPEEDOMETER]: DuploTrainBaseSpeedometer\n        };\n\n        constructor = deviceConstructors[deviceType as Consts.DeviceType];\n\n        if (constructor) {\n            return new constructor(this, portId, undefined, deviceType);\n        } else {\n            return new Device(this, portId, undefined, deviceType);\n        }\n\n    }\n\n\n    protected _getDeviceByPortId (portId: number) {\n        return this._attachedDevices[portId];\n    }\n\n\n}\n","import { Peripheral } from \"@abandonware/noble\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nimport { IBLEAbstraction } from \"../interfaces\";\nconst debug = Debug(\"duplotrainbase\");\n\n\n/**\n * The DuploTrainBase is emitted if the discovered device is a Duplo Train Base.\n * @class DuploTrainBase\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class DuploTrainBase extends LPF2Hub {\n\n\n    public static IsDuploTrainBase (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.DUPLO_TRAIN_BASE_ID\n        );\n    }\n\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.DUPLO_TRAIN_BASE);\n        debug(\"Discovered Duplo Train Base\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Duplo Train Base\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"MOTOR\": 0,\n    \"COLOR\": 18,\n    \"SPEEDOMETER\": 19\n};\n\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class ColorDistanceSensor\n * @extends Device\n */\nexport class ColorDistanceSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.COLOR_DISTANCE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.COLOR:\n                if (message[this.isWeDo2SmartHub ? 2 : 4] <= 10) {\n                    const color = message[this.isWeDo2SmartHub ? 2 : 4];\n\n                    /**\n                     * Emits when a color sensor is activated.\n                     * @event ColorDistanceSensor#color\n                     * @type {object}\n                     * @param {Color} color\n                     */\n                    this.notify(\"color\", { color });\n                }\n                break;\n\n            case Mode.DISTANCE:\n                if (this.isWeDo2SmartHub) {\n                    break;\n                }\n                if (message[4] <= 10) {\n                    let distance = Math.floor(message[4] * 25.4);\n\n                    if (distance < 0) {\n                        distance = 0;\n                    }\n\n                    /**\n                     * Emits when a distance sensor is activated.\n                     * @event ColorDistanceSensor#distance\n                     * @type {object}\n                     * @param {number} distance Distance, in millimeters.\n                     */\n                    this.notify(\"distance\", { distance });\n                }\n                break;\n\n            case Mode.COLOR_AND_DISTANCE:\n                if (this.isWeDo2SmartHub) {\n                    break;\n                }\n\n                let distance = message[5];\n                const partial = message[7];\n\n                if (partial > 0) {\n                    distance += 1.0 / partial;\n                }\n\n                distance = Math.floor(distance * 25.4) - 20;\n\n                /**\n                 * A combined color and distance event, emits when the sensor is activated.\n                 * @event ColorDistanceSensor#colorAndDistance\n                 * @type {object}\n                 * @param {Color} color\n                 * @param {number} distance Distance, in millimeters.\n                 */\n                if (message[4] <= 10) {\n                    const color = message[4];\n                    this.notify(\"colorAndDistance\", { color, distance });\n                }\n                break;\n\n        }\n    }\n\n\n    /**\n     * Switches the IR receiver into extended channel mode. After setting this, use channels 5-8 instead of 1-4 for this receiver.\n     *\n     * NOTE: Calling this with channel 5-8 with switch off extended channel mode for this receiver.\n     * @method ColorDistanceSensor#setPFExtendedChannel\n     * @param {number} channel Channel number, between 1-8\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setPFExtendedChannel (channel: number) {\n        let address = 0;\n        if (channel >= 4) {\n            channel -= 4;\n            address = 1;\n        }\n        const message = Buffer.alloc(2);\n        // Send \"Extended toggle address command\"\n        message[0] = ((channel - 1) << 4) + (address << 3);\n        message[1] = 6 << 4;\n        return this.sendPFIRMessage(message);\n    }\n\n\n    /**\n     * Set the power of a Power Functions motor via IR\n     * @method ColorDistanceSensor#setPFPower\n     * @param {number} channel Channel number, between 1-4\n     * @param {string} output Outport port, \"RED\" (A) or \"BLUE\" (B)\n     * @param {number} power -7 (full reverse) to 7 (full forward). 0 is stop. 8 is brake.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setPFPower (channel: number, output: Output, power: number) {\n        let address = 0;\n        if (channel > 4) {\n            channel -= 4;\n            address = 1;\n        }\n        const message = Buffer.alloc(2);\n        // Send \"Single output mode\"\n        message[0] = ((channel - 1) << 4) + (address << 3) + (output === \"RED\" ? 4 : 5);\n        message[1] = this._pfPowerToPWM(power) << 4;\n        return this.sendPFIRMessage(message);\n    }\n\n\n    /**\n     * Start Power Functions motors running via IR\n     *\n     * NOTE: This command is designed for bang-bang style operation. To keep the motors running, the sensor needs to be within range of the IR receiver constantly.\n     * @method ColorDistanceSensor#startPFMotors\n     * @param {Buffer} channel Channel number, between 1-4\n     * @param {Buffer} powerA -7 (full reverse) to 7 (full forward). 0 is stop. 8 is brake.\n     * @param {Buffer} powerB -7 (full reverse) to 7 (full forward). 0 is stop. 8 is brake.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public startPFMotors (channel: number, powerBlue: number, powerRed: number) {\n        let address = 0;\n        if (channel > 4) {\n            channel -= 4;\n            address = 1;\n        }\n        const message = Buffer.alloc(2);\n        // Send \"Combo PWM mode\"\n        message[0] = (((channel - 1) + 4 + (address << 3)) << 4) + this._pfPowerToPWM(powerBlue);\n        message[1] = this._pfPowerToPWM(powerRed) << 4;\n        return this.sendPFIRMessage(message);\n    }\n\n\n    /**\n     * Send a raw Power Functions IR command\n     * @method ColorDistanceSensor#sendPFIRMessage\n     * @param {Buffer} message 2 byte payload making up a Power Functions protocol command. NOTE: Only specify nibbles 1-3, nibble 4 should be zeroed.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public sendPFIRMessage (message: Buffer) {\n        if (this.isWeDo2SmartHub) {\n            throw new Error(\"Power Functions IR is not available on the WeDo 2.0 Smart Hub\");\n        } else {\n            const payload = Buffer.alloc(2);\n            payload[0] = (message[0] << 4) + (message[1] >> 4);\n            payload[1] = message[0] >> 4;\n            this.subscribe(Mode.PF_IR);\n            return this.writeDirect(0x07, payload);\n        }\n    }\n\n\n    /**\n     * Set the color of the LED on the sensor via a color value.\n     * @method ColorDistanceSensor#setColor\n     * @param {Color} color\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setColor (color: number | boolean) {\n        return new Promise((resolve, reject) => {\n            if (color === false) {\n                color = 0;\n            }\n            if (this.isWeDo2SmartHub) {\n                throw new Error(\"Setting LED color is not available on the WeDo 2.0 Smart Hub\");\n            } else {\n                this.subscribe(Mode.LED);\n                this.writeDirect(0x05, Buffer.from([color]));\n            }\n            return resolve();\n        });\n    }\n\n\n    private _pfPowerToPWM (power: number) {\n        return power & 15;\n    }\n\n\n}\n\nexport enum Mode {\n    COLOR = 0x00,\n    DISTANCE = 0x01,\n    LED = 0x05,\n    PF_IR = 0x07,\n    COLOR_AND_DISTANCE = 0x08\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"color\": Mode.COLOR,\n    \"distance\": Mode.DISTANCE,\n    \"colorAndDistance\": Mode.COLOR_AND_DISTANCE\n};\n\nexport enum Output {\n    RED = \"RED\",\n    BLUE = \"BLUE\"\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class CurrentSensor\n * @extends Device\n */\nexport class CurrentSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.CURRENT_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this.mode;\n\n        switch (mode) {\n            case Mode.CURRENT:\n                if (this.isWeDo2SmartHub) {\n                    const current =  message.readInt16LE(2) / 1000;\n                    this.notify(\"current\", { current });\n                } else {\n                    let maxCurrentValue = MaxCurrentValue[this.hub.type];\n                    if (maxCurrentValue === undefined) {\n                        maxCurrentValue = MaxCurrentValue[Consts.HubType.UNKNOWN];\n                    }\n                    let maxCurrentRaw = MaxCurrentRaw[this.hub.type];\n                    if (maxCurrentRaw === undefined) {\n                        maxCurrentRaw = MaxCurrentRaw[Consts.HubType.UNKNOWN];\n                    }\n                    const current = message.readUInt16LE(4) * maxCurrentValue / maxCurrentRaw;\n                    /**\n                     * Emits when a current change is detected.\n                     * @event CurrentSensor#current\n                     * @type {object}\n                     * @param {number} current\n                     */\n                    this.notify(\"current\", { current });\n                }\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    CURRENT = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"current\": Mode.CURRENT\n};\n\nconst MaxCurrentValue: {[hubType: number]: number} = {\n    [Consts.HubType.UNKNOWN]: 2444,\n    [Consts.HubType.TECHNIC_MEDIUM_HUB]: 4175,\n};\n\nconst MaxCurrentRaw: {[hubType: number]: number} = {\n    [Consts.HubType.UNKNOWN]: 4095,\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class DuploTrainBaseColorSensor\n * @extends Device\n */\nexport class DuploTrainBaseColorSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.DUPLO_TRAIN_BASE_COLOR_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.COLOR:\n                if (message[4] <= 10) {\n                    const color = message[4];\n\n                    /**\n                     * Emits when a color sensor is activated.\n                     * @event DuploTrainBaseColorSensor#color\n                     * @type {object}\n                     * @param {Color} color\n                     */\n                    this.notify(\"color\", { color });\n                }\n                break;\n\n            case Mode.REFLECTIVITY:\n                const reflect = message[4];\n\n                /**\n                 * Emits when the light reflectivity changes.\n                 * @event DuploTrainBaseColorSensor#reflect\n                 * @type {object}\n                 * @param {number} reflect Percentage, from 0 to 100.\n                 */\n                this.notify(\"reflect\", { reflect });\n                break;\n\n            case Mode.RGB:\n                const red = Math.floor(message.readUInt16LE(4) / 4);\n                const green = Math.floor(message.readUInt16LE(6) / 4);\n                const blue = Math.floor(message.readUInt16LE(8) / 4);\n\n                /**\n                 * Emits when the light reflectivity changes.\n                 * @event DuploTrainBaseColorSensor#rgb\n                 * @type {object}\n                 * @param {number} red\n                 * @param {number} green\n                 * @param {number} blue\n                 */\n                this.notify(\"rgb\", { red, green, blue });\n                break;\n\n        }\n    }\n\n}\n\nexport enum Mode {\n    COLOR = 0x00,\n    REFLECTIVITY = 0x02,\n    RGB = 0x03\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"color\": Mode.COLOR,\n    \"reflect\": Mode.REFLECTIVITY,\n    \"rgb\": Mode.RGB\n};\n","import { BasicMotor } from \"./basicmotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class DuploTrainBaseMotor\n * @extends BasicMotor\n */\nexport class DuploTrainBaseMotor extends BasicMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.DUPLO_TRAIN_BASE_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class DuploTrainBaseSpeaker\n * @extends Device\n */\nexport class DuploTrainBaseSpeaker extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.DUPLO_TRAIN_BASE_SPEAKER);\n    }\n\n    /**\n     * Play a built-in train sound.\n     * @method DuploTrainBaseSpeaker#playSound\n     * @param {DuploTrainBaseSound} sound\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public playSound (sound: Consts.DuploTrainBaseSound) {\n        return new Promise((resolve, reject) => {\n            this.subscribe(Mode.SOUND);\n            this.writeDirect(0x01, Buffer.from([sound]));\n            return resolve();\n        });\n    }\n\n    /**\n     * Play a built-in system tone.\n     * @method DuploTrainBaseSpeaker#playTone\n     * @param {number} tone\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public playTone (tone: number) {\n        this.subscribe(Mode.TONE);\n        this.writeDirect(0x02, Buffer.from([tone]));\n    }\n\n}\n\nexport enum Mode {\n    SOUND = 0x01,\n    TONE = 0x02\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class DuploTraniBaseSpeedometer\n * @extends Device\n */\nexport class DuploTrainBaseSpeedometer extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.DUPLO_TRAIN_BASE_SPEEDOMETER);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.SPEED:\n                const speed = message.readInt16LE(4);\n\n                /**\n                 * Emits on a speed change.\n                 * @event DuploTrainBaseSpeedometer#speed\n                 * @type {object}\n                 * @param {number} speed\n                 */\n                this.notify(\"speed\", { speed });\n                break;\n\n        }\n    }\n\n}\n\nexport enum Mode {\n    SPEED = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"speed\": Mode.SPEED\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class HubLED\n * @extends Device\n */\nexport class HubLED extends Device {\n\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.HUB_LED);\n    }\n\n\n    /**\n     * Set the color of the LED on the Hub via a color value.\n     * @method HubLED#setColor\n     * @param {Color} color\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setColor (color: number | boolean) {\n        return new Promise((resolve, reject) => {\n            if (typeof color === \"boolean\") {\n                color = 0;\n            }\n            if (this.isWeDo2SmartHub) {\n                this.send(Buffer.from([0x06, 0x17, 0x01, 0x01]), Consts.BLECharacteristic.WEDO2_PORT_TYPE_WRITE);\n                this.send(Buffer.from([0x06, 0x04, 0x01, color]), Consts.BLECharacteristic.WEDO2_MOTOR_VALUE_WRITE);\n            } else {\n                this.subscribe(Mode.COLOR);\n                this.writeDirect(0x00, Buffer.from([color]));\n            }\n            return resolve();\n        });\n    }\n\n\n    /**\n     * Set the color of the LED on the Hub via RGB values.\n     * @method HubLED#setRGB\n     * @param {number} red\n     * @param {number} green\n     * @param {number} blue\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setRGB (red: number, green: number, blue: number) {\n        return new Promise((resolve, reject) => {\n            if (this.isWeDo2SmartHub) {\n                this.send(Buffer.from([0x06, 0x17, 0x01, 0x02]), Consts.BLECharacteristic.WEDO2_PORT_TYPE_WRITE);\n                this.send(Buffer.from([0x06, 0x04, 0x03, red, green, blue]), Consts.BLECharacteristic.WEDO2_MOTOR_VALUE_WRITE);\n            } else {\n                this.subscribe(Mode.RGB);\n                this.writeDirect(0x01, Buffer.from([red, green, blue]));\n            }\n            return resolve();\n        });\n    }\n\n\n}\n\nexport enum Mode {\n    COLOR = 0x00,\n    RGB = 0x01\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\nimport { calculateRamp } from \"../utils\";\n\n/**\n * @class Light\n * @extends Device\n */\nexport class Light extends Device {\n\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.LIGHT);\n    }\n\n\n    /**\n     * Set the light brightness.\n     * @method Light#setBrightness\n     * @param {number} brightness Brightness value between 0-100 (0 is off)\n     * @returns {Promise} Resolved upon successful completion of command.\n     */\n    public setBrightness (brightness: number, interrupt: boolean = true) {\n        if (interrupt) {\n            this.cancelEventTimer();\n        }\n        return new Promise((resolve) => {\n            this.writeDirect(0x00, Buffer.from([brightness]));\n            return resolve();\n        });\n    }\n\n\n    /**\n     * Ramp the light brightness.\n     * @method Light#rampBrightness\n     * @param {number} fromBrightness Brightness value between 0-100 (0 is off)\n     * @param {number} toBrightness Brightness value between 0-100 (0 is off)\n     * @param {number} time How long the ramp should last (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command.\n     */\n    public rampBrightness (fromBrightness: number, toBrightness: number, time: number) {\n        this.cancelEventTimer();\n        return new Promise((resolve) => {\n            calculateRamp(this, fromBrightness, toBrightness, time)\n            .on(\"changePower\", (power) => {\n                this.setBrightness(power, false);\n            })\n            .on(\"finished\", resolve);\n        });\n    }\n\n\n}\n","import { TachoMotor } from \"./tachomotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MediumLinearMotor\n * @extends TachoMotor\n */\nexport class MediumLinearMotor extends TachoMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.MEDIUM_LINEAR_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MotionSensor\n * @extends Device\n */\nexport class MotionSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.MOTION_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.DISTANCE:\n                let distance = message[this.isWeDo2SmartHub ? 2 : 4];\n                if (message[this.isWeDo2SmartHub ? 3 : 5] === 1) {\n                    distance = distance + 255;\n                }\n                distance *= 10;\n                /**\n                 * Emits when a distance sensor is activated.\n                 * @event MotionSensor#distance\n                 * @type {object}\n                 * @param {number} distance Distance, in millimeters.\n                 */\n                this.notify(\"distance\", { distance });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    DISTANCE = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"distance\": Mode.DISTANCE\n};\n","import { TachoMotor } from \"./tachomotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MoveHubMediumLinearMotor\n * @extends TachoMotor\n */\nexport class MoveHubMediumLinearMotor extends TachoMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.MOVE_HUB_MEDIUM_LINEAR_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class MoveHubTiltSensor\n * @extends Device\n */\nexport class MoveHubTiltSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.MOVE_HUB_TILT_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.TILT:\n                /**\n                 * Emits when a tilt sensor is activated.\n                 * @event MoveHubTiltSensor#tilt\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 */\n                const x = -message.readInt8(4);\n                const y = message.readInt8(5);\n                this.notify(\"tilt\", { x, y });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    TILT = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"tilt\": Mode.TILT\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class PiezoBuzzer\n * @extends Device\n */\nexport class PiezoBuzzer extends Device {\n\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.PIEZO_BUZZER);\n    }\n\n\n    /**\n     * Play a tone on the Hub's in-built buzzer\n     * @method PiezoBuzzer#playTone\n     * @param {number} frequency\n     * @param {number} time How long the tone should play for (in milliseconds).\n     * @returns {Promise} Resolved upon successful completion of command (ie. once the tone has finished playing).\n     */\n    public playTone (frequency: number, time: number) {\n        return new Promise((resolve) => {\n            const data = Buffer.from([0x05, 0x02, 0x04, 0x00, 0x00, 0x00, 0x00]);\n            data.writeUInt16LE(frequency, 3);\n            data.writeUInt16LE(time, 5);\n            this.send(data, Consts.BLECharacteristic.WEDO2_MOTOR_VALUE_WRITE);\n            global.setTimeout(resolve, time);\n        });\n    }\n\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class RemoteControlButton\n * @extends Device\n */\nexport class RemoteControlButton extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.REMOTE_CONTROL_BUTTON);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.BUTTON_EVENTS:\n                /**\n                 * Emits when a button on the remote is pressed or released.\n                 * @event RemoteControlButton#button\n                 * @type {object}\n                 * @param {number} event\n                 */\n                const event = message[4];\n                this.notify(\"remoteButton\", { event });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    BUTTON_EVENTS = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"remoteButton\": Mode.BUTTON_EVENTS\n};\n\nexport const ButtonState: {[state: string]: number} = {\n    \"UP\": 0x01,\n    \"DOWN\": 0xff,\n    \"STOP\": 0x7f,\n    \"RELEASED\": 0x00,\n};\n","import { BasicMotor } from \"./basicmotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class SimpleMediumLinearMotor\n * @extends Device\n */\nexport class SimpleMediumLinearMotor extends BasicMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.SIMPLE_MEDIUM_LINEAR_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicColorSensor\n * @extends Device\n */\nexport class TechnicColorSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_COLOR_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.COLOR:\n                if (message[4] <= 10) {\n                    const color = message[4];\n\n                    /**\n                     * Emits when a color sensor is activated.\n                     * @event TechnicColorSensor#color\n                     * @type {object}\n                     * @param {Color} color\n                     */\n                    this.notify(\"color\", { color });\n                }\n                break;\n\n            case Mode.REFLECTIVITY:\n                const reflect = message[4];\n\n                /**\n                 * Emits when the light reflectivity changes.\n                 * @event TechnicColorSensor#reflect\n                 * @type {object}\n                 * @param {number} reflect Percentage, from 0 to 100.\n                 */\n                this.notify(\"reflect\", { reflect });\n                break;\n\n            case Mode.AMBIENT_LIGHT:\n                const ambient = message[4];\n\n                /**\n                 * Emits when the ambient light changes.\n                 * @event TechnicColorSensor#ambient\n                 * @type {object}\n                 * @param {number} ambient Percentage, from 0 to 100.\n                 */\n                this.notify(\"ambient\", { ambient });\n                break;\n        }\n    }\n\n    /**\n     * Set the brightness (or turn on/off) of the lights around the sensor.\n     * @method TechnicColorSensor#setBrightness\n     * @param {number} firstSegment First light segment. 0-100 brightness.\n     * @param {number} secondSegment Second light segment. 0-100 brightness.\n     * @param {number} thirdSegment Third light segment. 0-100 brightness.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setBrightness (firstSegment: number, secondSegment: number, thirdSegment: number) {\n        this.writeDirect(0x03, Buffer.from([firstSegment, secondSegment, thirdSegment]));\n    }\n\n}\n\nexport enum Mode {\n    COLOR = 0x00,\n    REFLECTIVITY = 0x01,\n    AMBIENT_LIGHT = 0x02\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"color\": Mode.COLOR,\n    \"reflect\": Mode.REFLECTIVITY,\n    \"ambient\": Mode.AMBIENT_LIGHT\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicDistanceSensor\n * @extends Device\n */\nexport class TechnicDistanceSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_DISTANCE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.DISTANCE:\n                const distance = message.readUInt16LE(4);\n\n                /**\n                 * Emits when the detected distance changes (Slow sampling covers 40mm to 2500mm).\n                 * @event TechnicDistanceSensor#distance\n                 * @type {object}\n                 * @param {number} distance Distance, from 40 to 2500mm\n                 */\n                this.notify(\"distance\", { distance });\n                break;\n\n            case Mode.FAST_DISTANCE:\n                const fastDistance = message.readUInt16LE(4);\n\n                /**\n                 * Emits when the detected distance changes (Fast sampling covers 50mm to 320mm).\n                 * @event TechnicDistanceSensor#fastDistance\n                 * @type {object}\n                 * @param {number} fastDistance Distance, from 50 to 320mm\n                 */\n                this.notify(\"fastDistance\", { fastDistance });\n                break;\n        }\n    }\n\n    /**\n     * Set the brightness (or turn on/off) of the lights around the eyes.\n     * @method TechnicDistanceSensor#setBrightness\n     * @param {number} topLeft Top left quadrant (above left eye). 0-100 brightness.\n     * @param {number} bottomLeft Bottom left quadrant (below left eye). 0-100 brightness.\n     * @param {number} topRight Top right quadrant (above right eye). 0-100 brightness.\n     * @param {number} bottomRight Bottom right quadrant (below right eye). 0-100 brightness.\n     * @returns {Promise} Resolved upon successful issuance of the command.\n     */\n    public setBrightness (topLeft: number, bottomLeft: number, topRight: number, bottomRight: number) {\n        this.writeDirect(0x05, Buffer.from([topLeft, topRight, bottomLeft, bottomRight]));\n    }\n\n}\n\nexport enum Mode {\n    DISTANCE = 0x00,\n    FAST_DISTANCE = 0x01\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"distance\": Mode.DISTANCE,\n    \"fastDistance\": Mode.FAST_DISTANCE\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicForceSensor\n * @extends Device\n */\nexport class TechnicForceSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_FORCE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.FORCE:\n                const force = message[this.isWeDo2SmartHub ? 2 : 4] / 10;\n\n                /**\n                 * Emits when force is applied.\n                 * @event TechnicForceSensor#force\n                 * @type {object}\n                 * @param {number} force Force, in newtons (0-10).\n                 */\n                this.notify(\"force\", { force });\n                break;\n\n            case Mode.TOUCHED:\n                const touched = message[4] ? true : false;\n\n                /**\n                 * Emits when the sensor is touched.\n                 * @event TechnicForceSensor#touch\n                 * @type {object}\n                 * @param {boolean} touch Touched on/off (boolean).\n                 */\n                this.notify(\"touched\", { touched });\n                break;\n\n            case Mode.TAPPED:\n                const tapped = message[4];\n\n                /**\n                 * Emits when the sensor is tapped.\n                 * @event TechnicForceSensor#tapped\n                 * @type {object}\n                 * @param {number} tapped How hard the sensor was tapped, from 0-3.\n                 */\n                this.notify(\"tapped\", { tapped });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    FORCE = 0x00,\n    TOUCHED = 0x01,\n    TAPPED = 0x02\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"force\": Mode.FORCE,\n    \"touched\": Mode.TOUCHED,\n    \"tapped\": Mode.TAPPED\n};\n","import { AbsoluteMotor } from \"./absolutemotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicLargeAngularMotor\n * @extends AbsoluteMotor\n */\nexport class TechnicLargeAngularMotor extends AbsoluteMotor {\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.TECHNIC_LARGE_ANGULAR_MOTOR) {\n        super(hub, portId, {}, type);\n    }\n\n}\n","import { AbsoluteMotor } from \"./absolutemotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicLargeLinearMotor\n * @extends AbsoluteMotor\n */\nexport class TechnicLargeLinearMotor extends AbsoluteMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.TECHNIC_LARGE_LINEAR_MOTOR);\n    }\n\n}\n","import { AbsoluteMotor } from \"./absolutemotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicMediumAngularMotor\n * @extends AbsoluteMotor\n */\nexport class TechnicMediumAngularMotor extends AbsoluteMotor {\n\n    constructor (hub: IDeviceInterface, portId: number, modeMap: {[event: string]: number} = {}, type: Consts.DeviceType = Consts.DeviceType.TECHNIC_MEDIUM_ANGULAR_MOTOR) {\n        super(hub, portId, {}, type);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicMediumHubAccelerometerSensor\n * @extends Device\n */\nexport class TechnicMediumHubAccelerometerSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_MEDIUM_HUB_ACCELEROMETER);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.ACCEL:\n                /**\n                 * Emits when accelerometer detects movement. Measured in mG.\n                 * @event TechnicMediumHubAccelerometerSensor#accel\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 * @param {number} z\n                 */\n                const x = Math.round(message.readInt16LE(4) / 4.096);\n                const y = Math.round(message.readInt16LE(6) / 4.096);\n                const z = Math.round(message.readInt16LE(8) / 4.096);\n                this.notify(\"accel\", { x, y, z });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    ACCEL = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"accel\": Mode.ACCEL\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicMediumHubGyroSensor\n * @extends Device\n */\nexport class TechnicMediumHubGyroSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_MEDIUM_HUB_GYRO_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.GYRO:\n                /**\n                 * Emits when gyroscope detects movement. Measured in DPS - degrees per second.\n                 * @event TechnicMediumHubGyroSensor#gyro\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 * @param {number} z\n                 */\n                const x = Math.round(message.readInt16LE(4) * 7 / 400);\n                const y = Math.round(message.readInt16LE(6) * 7 / 400);\n                const z = Math.round(message.readInt16LE(8) * 7 / 400);\n                this.notify(\"gyro\", { x, y, z });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    GYRO = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"gyro\": Mode.GYRO\n};\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicMediumHubTiltSensor\n * @extends Device\n */\nexport class TechnicMediumHubTiltSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TECHNIC_MEDIUM_HUB_TILT_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.TILT:\n                /**\n                 * Emits when a tilt sensor is activated.\n                 * @event TechnicMediumHubTiltSensor#tilt\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 * @param {number} z\n                 */\n                const z = -message.readInt16LE(4);\n                const y = message.readInt16LE(6);\n                const x = message.readInt16LE(8);\n                this.notify(\"tilt\", { x, y, z });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    TILT = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"tilt\": Mode.TILT\n};\n","import { AbsoluteMotor } from \"./absolutemotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TechnicXLargeLinearMotor\n * @extends AbsoluteMotor\n */\nexport class TechnicXLargeLinearMotor extends AbsoluteMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.TECHNIC_XLARGE_LINEAR_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TiltSensor\n * @extends Device\n */\nexport class TiltSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.TILT_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.TILT:\n                const x = message.readInt8(this.isWeDo2SmartHub ? 2 : 4);\n                const y = message.readInt8(this.isWeDo2SmartHub ? 3 : 5);\n                /**\n                 * Emits when a tilt sensor is activated.\n                 * @event TiltSensor#tilt\n                 * @type {object}\n                 * @param {number} x\n                 * @param {number} y\n                 */\n                this.notify(\"tilt\", { x, y });\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    TILT = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"tilt\": Mode.TILT\n};\n","import { BasicMotor } from \"./basicmotor\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class TrainMotor\n * @extends BasicMotor\n */\nexport class TrainMotor extends BasicMotor {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, {}, Consts.DeviceType.TRAIN_MOTOR);\n    }\n\n}\n","import { Device } from \"./device\";\n\nimport { IDeviceInterface } from \"../interfaces\";\n\nimport * as Consts from \"../consts\";\n\n/**\n * @class VoltageSensor\n * @extends Device\n */\nexport class VoltageSensor extends Device {\n\n    constructor (hub: IDeviceInterface, portId: number) {\n        super(hub, portId, ModeMap, Consts.DeviceType.VOLTAGE_SENSOR);\n    }\n\n    public receive (message: Buffer) {\n        const mode = this._mode;\n\n        switch (mode) {\n            case Mode.VOLTAGE:\n                if (this.isWeDo2SmartHub) {\n                    const voltage = message.readInt16LE(2) / 40;\n                    this.notify(\"voltage\", { voltage });\n                } else {\n                    let maxVoltageValue = MaxVoltageValue[this.hub.type];\n                    if (maxVoltageValue === undefined) {\n                        maxVoltageValue = MaxVoltageValue[Consts.HubType.UNKNOWN];\n                    }\n                    let maxVoltageRaw = MaxVoltageRaw[this.hub.type];\n                    if (maxVoltageRaw === undefined) {\n                        maxVoltageRaw = MaxVoltageRaw[Consts.HubType.UNKNOWN];\n                    }\n                    const voltage = message.readUInt16LE(4) * maxVoltageValue / maxVoltageRaw;\n                    /**\n                     * Emits when a voltage change is detected.\n                     * @event VoltageSensor#voltage\n                     * @type {object}\n                     * @param {number} voltage\n                     */\n                    this.notify(\"voltage\", { voltage });\n                }\n                break;\n        }\n    }\n\n}\n\nexport enum Mode {\n    VOLTAGE = 0x00\n}\n\nexport const ModeMap: {[event: string]: number} = {\n    \"voltage\": Mode.VOLTAGE\n};\n\nconst MaxVoltageValue: {[hubType: number]: number} = {\n    [Consts.HubType.UNKNOWN]: 9.615,\n    [Consts.HubType.DUPLO_TRAIN_BASE]: 6.4,\n    [Consts.HubType.REMOTE_CONTROL]: 6.4,\n};\n\nconst MaxVoltageRaw: {[hubType: number]: number} = {\n    [Consts.HubType.UNKNOWN]: 3893,\n    [Consts.HubType.DUPLO_TRAIN_BASE]: 3047,\n    [Consts.HubType.REMOTE_CONTROL]: 3200,\n    [Consts.HubType.TECHNIC_MEDIUM_HUB]: 4095,\n};\n","import { Peripheral } from \"@abandonware/noble\";\nimport compareVersion from \"compare-versions\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"hub\");\n\n\n/**\n * The Hub is emitted if the discovered device is a Hub.\n * @class Hub\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class Hub extends LPF2Hub {\n\n\n    public static IsHub (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.HUB_ID\n        );\n    }\n\n    protected _currentPort = 0x3b;\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.HUB);\n        debug(\"Discovered Powered UP Hub\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Powered UP Hub\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n    protected _checkFirmware (version: string) {\n        if (compareVersion(\"1.1.00.0004\", version) === 1) {\n            throw new Error(`Your Powered Up Hub's (${this.name}) firmware is out of date and unsupported by this library. Please update it via the official Powered Up app.`);\n        }\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"A\": 0,\n    \"B\": 1,\n    \"HUB_LED\": 50,\n    \"CURRENT_SENSOR\": 59,\n    \"VOLTAGE_SENSOR\": 60\n};\n","/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n  var allowedOperators = [\n    '>',\n    '>=',\n    '=',\n    '<',\n    '<='\n  ];\n\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n\n  compareVersions.validate = function(version) {\n    return typeof version === 'string' && semver.test(version);\n  }\n\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  }\n\n  return compareVersions;\n}));\n","import { Peripheral } from \"@abandonware/noble\";\nimport compareVersion from \"compare-versions\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"movehub\");\n\n\n/**\n * The MoveHub is emitted if the discovered device is a Move Hub.\n * @class MoveHub\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class MoveHub extends LPF2Hub {\n\n\n    public static IsMoveHub (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.MOVE_HUB_ID\n        );\n    }\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.MOVE_HUB);\n        debug(\"Discovered Move Hub\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Move Hub\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n    protected _checkFirmware (version: string) {\n        if (compareVersion(\"2.0.00.0017\", version) === 1) {\n            throw new Error(`Your Move Hub's (${this.name}) firmware is out of date and unsupported by this library. Please update it via the official Powered Up app.`);\n        }\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"A\": 0,\n    \"B\": 1,\n    \"C\": 2,\n    \"D\": 3,\n    \"HUB_LED\": 50,\n    \"TILT_SENSOR\": 58,\n    \"CURRENT_SENSOR\": 59,\n    \"VOLTAGE_SENSOR\": 60\n};\n","import { Peripheral } from \"@abandonware/noble\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"remotecontrol\");\n\n\n/**\n * The RemoteControl is emitted if the discovered device is a Remote Control.\n * @class RemoteControl\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class RemoteControl extends LPF2Hub {\n\n\n    public static IsRemoteControl (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.REMOTE_CONTROL_ID\n        );\n    }\n\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.REMOTE_CONTROL);\n        debug(\"Discovered Powered UP Remote\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Powered UP Remote\");\n        await super.connect();\n        debug(\"Connect completed\");\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"LEFT\": 0,\n    \"RIGHT\": 1,\n    \"HUB_LED\": 52,\n    \"VOLTAGE_SENSOR\": 59,\n    \"REMOTE_CONTROL_RSSI\": 60\n};\n","import { Peripheral } from \"@abandonware/noble\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { LPF2Hub } from \"./lpf2hub\";\n\nimport * as Consts from \"../consts\";\n\nimport Debug = require(\"debug\");\nconst debug = Debug(\"technicmediumhub\");\n\n\n/**\n * The TechnicMediumHub is emitted if the discovered device is a Technic Medium Hub.\n * @class TechnicMediumHub\n * @extends LPF2Hub\n * @extends BaseHub\n */\nexport class TechnicMediumHub extends LPF2Hub {\n\n\n    public static IsTechnicMediumHub (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.LPF2_HUB.replace(/-/g, \"\")) >= 0 &&\n            peripheral.advertisement.manufacturerData &&\n            peripheral.advertisement.manufacturerData.length > 3 &&\n            peripheral.advertisement.manufacturerData[3] === Consts.BLEManufacturerData.TECHNIC_MEDIUM_HUB\n        );\n    }\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.TECHNIC_MEDIUM_HUB);\n        debug(\"Discovered Control+ Hub\");\n    }\n\n\n    public async connect () {\n        debug(\"Connecting to Control+ Hub\");\n        await super.connect();\n        await this.send(Buffer.from([0x41, 0x3d, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x01]), Consts.BLECharacteristic.LPF2_ALL); // Temperature\n        debug(\"Connect completed\");\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"A\": 0,\n    \"B\": 1,\n    \"C\": 2,\n    \"D\": 3,\n    \"HUB_LED\": 50,\n    \"CURRENT_SENSOR\": 59,\n    \"VOLTAGE_SENSOR\": 60,\n    \"ACCELEROMETER\": 97,\n    \"GYRO_SENSOR\": 98,\n    \"TILT_SENSOR\": 99\n};\n","import { Peripheral } from \"@abandonware/noble\";\n\nimport { IBLEAbstraction } from \"../interfaces\";\n\nimport { BaseHub } from \"./basehub\";\n\nimport * as Consts from \"../consts\";\n\nimport { isWebBluetooth } from \"../utils\";\n\nimport Debug = require(\"debug\");\nimport { HubLED } from \"../devices/hubled\";\nconst debug = Debug(\"wedo2smarthub\");\n\n\n/**\n * The WeDo2SmartHub is emitted if the discovered device is a WeDo 2.0 Smart Hub.\n * @class WeDo2SmartHub\n * @extends BaseHub\n */\nexport class WeDo2SmartHub extends BaseHub {\n\n\n    public static IsWeDo2SmartHub (peripheral: Peripheral) {\n        return (\n            peripheral.advertisement &&\n            peripheral.advertisement.serviceUuids &&\n            peripheral.advertisement.serviceUuids.indexOf(Consts.BLEService.WEDO2_SMART_HUB.replace(/-/g, \"\")) >= 0\n        );\n    }\n\n\n    private _lastTiltX: number = 0;\n    private _lastTiltY: number = 0;\n\n\n    constructor (device: IBLEAbstraction) {\n        super(device, PortMap, Consts.HubType.WEDO2_SMART_HUB);\n        debug(\"Discovered WeDo 2.0 Smart Hub\");\n    }\n\n\n    public connect () {\n        return new Promise<void>(async (resolve, reject) => {\n            debug(\"Connecting to WeDo 2.0 Smart Hub\");\n            await super.connect();\n            await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB);\n            await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB_2);\n            if (!isWebBluetooth) {\n                await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB_3);\n                await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB_4);\n                await this._bleDevice.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB_5);\n            } else {\n                await this._bleDevice.discoverCharacteristicsForService(\"battery_service\");\n                await this._bleDevice.discoverCharacteristicsForService(\"device_information\");\n            }\n            debug(\"Connect completed\");\n            this.emit(\"connect\");\n            resolve();\n            this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_PORT_TYPE, this._parsePortMessage.bind(this));\n            this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_SENSOR_VALUE, this._parseSensorMessage.bind(this));\n            this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_BUTTON, this._parseSensorMessage.bind(this));\n            if (!isWebBluetooth) {\n                this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_BATTERY, this._parseBatteryMessage.bind(this));\n                this._bleDevice.readFromCharacteristic(Consts.BLECharacteristic.WEDO2_BATTERY, (err, data) => {\n                    if (data) {\n                        this._parseBatteryMessage(data);\n                    }\n                });\n            } else {\n                this._bleDevice.readFromCharacteristic(\"00002a19-0000-1000-8000-00805f9b34fb\", (err, data) => {\n                    if (data) {\n                        this._parseBatteryMessage(data);\n                    }\n                });\n                this._bleDevice.subscribeToCharacteristic(\"00002a19-0000-1000-8000-00805f9b34fb\", this._parseHighCurrentAlert.bind(this));\n            }\n            this._bleDevice.subscribeToCharacteristic(Consts.BLECharacteristic.WEDO2_HIGH_CURRENT_ALERT, this._parseHighCurrentAlert.bind(this));\n            if (!isWebBluetooth) {\n                this._bleDevice.readFromCharacteristic(Consts.BLECharacteristic.WEDO2_FIRMWARE_REVISION, (err, data) => {\n                    if (data) {\n                        this._parseFirmwareRevisionString(data);\n                    }\n                });\n            } else {\n                this._bleDevice.readFromCharacteristic(\"00002a26-0000-1000-8000-00805f9b34fb\", (err, data) => {\n                    if (data) {\n                        this._parseFirmwareRevisionString(data);\n                    }\n                });\n            }\n        });\n    }\n\n\n    /**\n     * Shutdown the Hub.\n     * @method WeDo2SmartHub#shutdown\n     * @returns {Promise} Resolved upon successful disconnect.\n     */\n    public shutdown () {\n        return this.send(Buffer.from([0x00]), Consts.BLECharacteristic.WEDO2_DISCONNECT);\n    }\n\n\n    /**\n     * Set the name of the Hub.\n     * @method WeDo2SmartHub#setName\n     * @param {string} name New name of the hub (14 characters or less, ASCII only).\n     * @returns {Promise} Resolved upon successful issuance of command.\n     */\n    public setName (name: string) {\n        if (name.length > 14) {\n            throw new Error(\"Name must be 14 characters or less\");\n        }\n        return new Promise((resolve, reject) => {\n            const data = Buffer.from(name, \"ascii\");\n            // Send this twice, as sometimes the first time doesn't take\n            this.send(data, Consts.BLECharacteristic.WEDO2_NAME_ID);\n            this.send(data, Consts.BLECharacteristic.WEDO2_NAME_ID);\n            this._name = name;\n            return resolve();\n        });\n    }\n\n\n    public send (message: Buffer, uuid: string) {\n        if (debug.enabled) {\n            debug(`Sent Message (${this._getCharacteristicNameFromUUID(uuid)})`, message);\n        }\n        return this._bleDevice.writeToCharacteristic(uuid, message);\n    }\n\n\n    public subscribe (portId: number, deviceType: number, mode: number) {\n        this.send(Buffer.from([0x01, 0x02, portId, deviceType, mode, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01]), Consts.BLECharacteristic.WEDO2_PORT_TYPE_WRITE);\n    }\n\n\n    public unsubscribe (portId: number, deviceType: number, mode: number) {\n        this.send(Buffer.from([0x01, 0x02, portId, deviceType, mode, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00]), Consts.BLECharacteristic.WEDO2_PORT_TYPE_WRITE);\n    }\n\n\n    private _getCharacteristicNameFromUUID (uuid: string) {\n        const keys = Object.keys(Consts.BLECharacteristic);\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            if (Consts.BLECharacteristic[key as keyof typeof Consts.BLECharacteristic] === uuid) {\n                return key;\n            }\n        }\n        return \"UNKNOWN\";\n    }\n\n\n    private _parseHighCurrentAlert (data: Buffer) {\n        debug(\"Received Message (WEDO2_HIGH_CURRENT_ALERT)\", data);\n    }\n\n\n    private _parseBatteryMessage (data: Buffer) {\n        debug(\"Received Message (WEDO2_BATTERY)\", data);\n        const batteryLevel = data[0];\n        if (batteryLevel !== this._batteryLevel) {\n            this._batteryLevel = batteryLevel;\n            this.emit(\"batteryLevel\", { batteryLevel });\n        }\n    }\n\n\n    private _parseFirmwareRevisionString (data: Buffer) {\n        debug(\"Received Message (WEDO2_FIRMWARE_REVISION)\", data);\n        this._firmwareVersion = data.toString();\n    }\n\n\n    private _parsePortMessage (data: Buffer) {\n        debug(\"Received Message (WEDO2_PORT_TYPE)\", data);\n\n        const portId = data[0];\n        const event = data[1];\n        const deviceType = event ? data[3] : 0;\n\n        if (event === 0x01) {\n            const device = this._createDevice(deviceType, portId);\n            this._attachDevice(device);\n        } else if (event === 0x00) {\n            const device = this._getDeviceByPortId(portId);\n            if (device) {\n                this._detachDevice(device);\n            }\n        }\n    }\n\n\n    private _parseSensorMessage (message: Buffer) {\n\n        debug(\"Received Message (WEDO2_SENSOR_VALUE)\", message);\n\n        if (message[0] === 0x01) {\n            /**\n             * Emits when a button is pressed.\n             * @event WeDo2SmartHub#button\n             * @param {string} button\n             * @param {ButtonState} state\n             */\n            this.emit(\"button\", { event: Consts.ButtonState.PRESSED });\n            return;\n        } else if (message[0] === 0x00) {\n            this.emit(\"button\", { event: Consts.ButtonState.RELEASED });\n            return;\n        }\n\n        const portId = message[1];\n        const device = this._getDeviceByPortId(portId);\n\n        if (device) {\n            device.receive(message);\n        }\n\n    }\n\n\n}\n\nexport const PortMap: {[portName: string]: number} = {\n    \"A\": 1,\n    \"B\": 2,\n    \"CURRENT_SENSOR\": 3,\n    \"VOLTAGE_SENSOR\": 4,\n    \"PIEZO_BUZZER\": 5,\n    \"HUB_LED\": 6\n};\n","import * as Consts from \"./consts\";\n\nimport { PoweredUP } from \"./poweredup-browser\";\n\nimport { BaseHub } from \"./hubs/basehub\";\nimport { DuploTrainBase } from \"./hubs/duplotrainbase\";\nimport { Hub } from \"./hubs/hub\";\nimport { MoveHub } from \"./hubs/movehub\";\nimport { RemoteControl } from \"./hubs/remotecontrol\";\nimport { TechnicMediumHub } from \"./hubs/technicmediumhub\";\nimport { WeDo2SmartHub } from \"./hubs/wedo2smarthub\";\n\nimport { ColorDistanceSensor } from \"./devices/colordistancesensor\";\nimport { CurrentSensor } from \"./devices/currentsensor\";\nimport { Device } from \"./devices/device\";\nimport { DuploTrainBaseColorSensor } from \"./devices/duplotrainbasecolorsensor\";\nimport { DuploTrainBaseMotor } from \"./devices/duplotrainbasemotor\";\nimport { DuploTrainBaseSpeaker } from \"./devices/duplotrainbasespeaker\";\nimport { DuploTrainBaseSpeedometer } from \"./devices/duplotrainbasespeedometer\";\nimport { HubLED } from \"./devices/hubled\";\nimport { Light } from \"./devices/light\";\nimport { MediumLinearMotor } from \"./devices/mediumlinearmotor\";\nimport { MotionSensor } from \"./devices/motionsensor\";\nimport { MoveHubMediumLinearMotor } from \"./devices/movehubmediumlinearmotor\";\nimport { MoveHubTiltSensor } from \"./devices/movehubtiltsensor\";\nimport { PiezoBuzzer } from \"./devices/piezobuzzer\";\nimport { RemoteControlButton } from \"./devices/remotecontrolbutton\";\nimport { SimpleMediumLinearMotor } from \"./devices/simplemediumlinearmotor\";\nimport { TechnicColorSensor } from \"./devices/techniccolorsensor\";\nimport { TechnicDistanceSensor } from \"./devices/technicdistancesensor\";\nimport { TechnicForceSensor } from \"./devices/technicforcesensor\";\nimport { TechnicLargeAngularMotor } from \"./devices/techniclargeangularmotor\";\nimport { TechnicLargeLinearMotor } from \"./devices/techniclargelinearmotor\";\nimport { TechnicMediumAngularMotor } from \"./devices/technicmediumangularmotor\";\nimport { TechnicMediumHubAccelerometerSensor } from \"./devices/technicmediumhubaccelerometersensor\";\nimport { TechnicMediumHubGyroSensor } from \"./devices/technicmediumhubgyrosensor\";\nimport { TechnicMediumHubTiltSensor } from \"./devices/technicmediumhubtiltsensor\";\nimport { TechnicXLargeLinearMotor } from \"./devices/technicxlargelinearmotor\";\nimport { TiltSensor } from \"./devices/tiltsensor\";\nimport { TrainMotor } from \"./devices/trainmotor\";\nimport { VoltageSensor } from \"./devices/voltagesensor\";\nimport { TachoMotor } from \"./devices/tachomotor\";\nimport { AbsoluteMotor } from \"./devices/absolutemotor\";\nimport { BasicMotor } from \"./devices/basicmotor\";\n\nimport { isWebBluetooth } from \"./utils\";\n\n// @ts-ignore\nwindow.PoweredUP = {\n    PoweredUP,\n    BaseHub,\n    WeDo2SmartHub,\n    TechnicMediumHub,\n    Hub,\n    RemoteControl,\n    DuploTrainBase,\n    Consts,\n    ColorDistanceSensor,\n    Device,\n    DuploTrainBaseColorSensor,\n    DuploTrainBaseMotor,\n    DuploTrainBaseSpeaker,\n    DuploTrainBaseSpeedometer,\n    HubLED,\n    Light,\n    MediumLinearMotor,\n    MotionSensor,\n    MoveHub,\n    MoveHubMediumLinearMotor,\n    MoveHubTiltSensor,\n    PiezoBuzzer,\n    RemoteControlButton,\n    SimpleMediumLinearMotor,\n    TechnicColorSensor,\n    TechnicDistanceSensor,\n    TechnicForceSensor,\n    TechnicMediumHubAccelerometerSensor,\n    TechnicMediumHubGyroSensor,\n    TechnicMediumHubTiltSensor,\n    TechnicMediumAngularMotor,\n    TechnicLargeAngularMotor,\n    TechnicLargeLinearMotor,\n    TechnicXLargeLinearMotor,\n    TiltSensor,\n    TrainMotor,\n    VoltageSensor,\n    CurrentSensor,\n    TachoMotor,\n    AbsoluteMotor,\n    BasicMotor,\n    isWebBluetooth\n};\n\n","import { WebBLEDevice } from \"./webbleabstraction\";\n\nimport { BaseHub } from \"./hubs/basehub\";\nimport { DuploTrainBase } from \"./hubs/duplotrainbase\";\nimport { Hub } from \"./hubs/hub\";\nimport { MoveHub } from \"./hubs/movehub\";\nimport { RemoteControl } from \"./hubs/remotecontrol\";\nimport { TechnicMediumHub } from \"./hubs/technicmediumhub\";\nimport { WeDo2SmartHub } from \"./hubs/wedo2smarthub\";\n\nimport * as Consts from \"./consts\";\n\nimport { EventEmitter } from \"events\";\n\nimport Debug = require(\"debug\");\nimport { IBLEAbstraction } from \"./interfaces\";\nconst debug = Debug(\"poweredup\");\n\n\n/**\n * @class PoweredUP\n * @extends EventEmitter\n */\nexport class PoweredUP extends EventEmitter {\n\n\n    private _connectedHubs: {[uuid: string]: BaseHub} = {};\n\n\n    constructor () {\n        super();\n        this._discoveryEventHandler = this._discoveryEventHandler.bind(this);\n    }\n\n\n    /**\n     * Begin scanning for Powered UP Hub devices.\n     * @method PoweredUP#scan\n     */\n    public async scan () {\n\n        try {\n\n            const device = await navigator.bluetooth.requestDevice({\n                filters: [\n                    {\n                        services: [\n                            Consts.BLEService.WEDO2_SMART_HUB\n                        ]\n                    },\n                    {\n                        services: [\n                            Consts.BLEService.LPF2_HUB\n                        ]\n                    }\n                ],\n                optionalServices: [\n                    Consts.BLEService.WEDO2_SMART_HUB_2,\n                    \"battery_service\",\n                    \"device_information\"\n                ]\n            });\n\n            // @ts-ignore\n            const server = await device.gatt.connect();\n            this._discoveryEventHandler.call(this, server);\n            return true;\n\n        } catch (err) {\n            return false;\n        }\n\n    }\n\n\n    /**\n     * Retrieve a list of Powered UP Hubs.\n     * @method PoweredUP#getHubs\n     * @returns {BaseHub[]}\n     */\n    public getHubs () {\n        return Object.values(this._connectedHubs);\n    }\n\n\n    /**\n     * Retrieve a Powered UP Hub by UUID.\n     * @method PoweredUP#getHubByUUID\n     * @param {string} uuid\n     * @returns {BaseHub | null}\n     */\n    public getHubByUUID (uuid: string) {\n        return this._connectedHubs[uuid];\n    }\n\n\n    /**\n     * Retrieve a Powered UP Hub by primary MAC address.\n     * @method PoweredUP#getHubByPrimaryMACAddress\n     * @param {string} address\n     * @returns {BaseHub}\n     */\n    public getHubByPrimaryMACAddress (address: string) {\n        return Object.values(this._connectedHubs).filter((hub) => hub.primaryMACAddress === address)[0];\n    }\n\n\n    /**\n     * Retrieve a list of Powered UP Hub by name.\n     * @method PoweredUP#getHubsByName\n     * @param {string} name\n     * @returns {BaseHub[]}\n     */\n    public getHubsByName (name: string) {\n        return Object.values(this._connectedHubs).filter((hub) => hub.name === name);\n    }\n\n\n    /**\n     * Retrieve a list of Powered UP Hub by type.\n     * @method PoweredUP#getHubsByType\n     * @param {string} name\n     * @returns {BaseHub[]}\n     */\n    public getHubsByType (hubType: number) {\n        return Object.values(this._connectedHubs).filter((hub) => hub.type === hubType);\n    }\n\n\n    private _determineLPF2HubType (device: IBLEAbstraction): Promise<Consts.HubType> {\n        return new Promise((resolve, reject) => {\n            let buf: Buffer = Buffer.alloc(0);\n            device.subscribeToCharacteristic(Consts.BLECharacteristic.LPF2_ALL, (data: Buffer) => {\n                buf = Buffer.concat([buf, data]);\n                while (buf[0] <= buf.length) {\n                    const len = buf[0];\n                    const message = buf.slice(0, len);\n                    buf = buf.slice(len);\n                    if (message[2] === 0x01 && message[3] === 0x0b) {\n                        switch (message[5]) {\n                            case Consts.BLEManufacturerData.REMOTE_CONTROL_ID:\n                                resolve(Consts.HubType.REMOTE_CONTROL);\n                                break;\n                            case Consts.BLEManufacturerData.MOVE_HUB_ID:\n                                resolve(Consts.HubType.MOVE_HUB);\n                                break;\n                            case Consts.BLEManufacturerData.HUB_ID:\n                                resolve(Consts.HubType.HUB);\n                                break;\n                            case Consts.BLEManufacturerData.DUPLO_TRAIN_BASE_ID:\n                                resolve(Consts.HubType.DUPLO_TRAIN_BASE);\n                                break;\n                            case Consts.BLEManufacturerData.TECHNIC_MEDIUM_HUB:\n                                resolve(Consts.HubType.TECHNIC_MEDIUM_HUB);\n                                break;\n                        }\n                        debug(\"Hub type determined\");\n                    } else {\n                        debug(\"Stashed in mailbox (LPF2_ALL)\", message);\n                        device.addToCharacteristicMailbox(Consts.BLECharacteristic.LPF2_ALL, message);\n                    }\n                }\n            });\n            device.writeToCharacteristic(Consts.BLECharacteristic.LPF2_ALL, Buffer.from([0x05, 0x00, 0x01, 0x0b, 0x05]));\n        });\n    }\n\n\n    private async _discoveryEventHandler (server: BluetoothRemoteGATTServer) {\n\n        const device = new WebBLEDevice(server);\n\n        let hub: BaseHub;\n\n        let hubType = Consts.HubType.UNKNOWN;\n        let isLPF2Hub = false;\n        try {\n            await device.discoverCharacteristicsForService(Consts.BLEService.WEDO2_SMART_HUB);\n            hubType = Consts.HubType.WEDO2_SMART_HUB;\n        // tslint:disable-next-line\n        } catch (error) {}\n        try {\n            if (hubType !== Consts.HubType.WEDO2_SMART_HUB) {\n                await device.discoverCharacteristicsForService(Consts.BLEService.LPF2_HUB);\n                isLPF2Hub = true;\n            }\n        // tslint:disable-next-line\n        } catch (error) {}\n\n        if (isLPF2Hub) {\n            hubType = await this._determineLPF2HubType(device);\n        }\n\n        switch (hubType) {\n            case Consts.HubType.WEDO2_SMART_HUB:\n                hub = new WeDo2SmartHub(device);\n                break;\n            case Consts.HubType.MOVE_HUB:\n                hub = new MoveHub(device);\n                break;\n            case Consts.HubType.HUB:\n                hub = new Hub(device);\n                break;\n            case Consts.HubType.REMOTE_CONTROL:\n                hub = new RemoteControl(device);\n                break;\n            case Consts.HubType.DUPLO_TRAIN_BASE:\n                hub = new DuploTrainBase(device);\n                break;\n            case Consts.HubType.TECHNIC_MEDIUM_HUB:\n                hub = new TechnicMediumHub(device);\n                break;\n            default:\n                return;\n        }\n\n        device.on(\"discoverComplete\", () => {\n\n            hub.on(\"connect\", () => {\n                debug(`Hub ${hub.uuid} connected`);\n                this._connectedHubs[hub.uuid] = hub;\n            });\n\n            hub.on(\"disconnect\", () => {\n                debug(`Hub ${hub.uuid} disconnected`);\n                delete this._connectedHubs[hub.uuid];\n            });\n\n            debug(`Hub ${hub.uuid} discovered`);\n\n            /**\n             * Emits when a Powered UP Hub device is found.\n             * @event PoweredUP#discover\n             * @param {WeDo2SmartHub | MoveHub | TechnicMediumHub | RemoteControl | DuploTrainBase} hub\n             */\n            this.emit(\"discover\", hub);\n\n        });\n\n    }\n\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","import Debug = require(\"debug\");\nimport { EventEmitter } from \"events\";\nimport { IBLEAbstraction } from \"./interfaces\";\nconst debug = Debug(\"bledevice\");\n\n\nexport class WebBLEDevice extends EventEmitter implements IBLEAbstraction {\n\n    private _webBLEServer: any;\n\n    private _uuid: string;\n    private _name: string = \"\";\n\n    private _listeners: {[uuid: string]: any} = {};\n    private _characteristics: {[uuid: string]: any} = {};\n\n    private _queue: Promise<any> = Promise.resolve();\n    private _mailbox: Buffer[] = [];\n\n    private _connected: boolean = false;\n    private _connecting: boolean = false;\n\n\n    constructor (device: any) {\n        super();\n        this._webBLEServer = device;\n        this._uuid = device.device.id;\n        this._name = device.device.name;\n        device.device.addEventListener(\"gattserverdisconnected\", () => {\n            this._connecting = false;\n            this._connected = false;\n            this.emit(\"disconnect\");\n        });\n        setTimeout(() => {\n            this.emit(\"discoverComplete\");\n        }, 2000);\n    }\n\n\n    public get uuid () {\n        return this._uuid;\n    }\n\n\n    public get name () {\n        return this._name;\n    }\n\n\n    public get connecting () {\n        return this._connecting;\n    }\n\n\n    public get connected () {\n        return this._connected;\n    }\n\n\n    public connect () {\n        return new Promise<void>((resolve, reject) => {\n            this._connected = true;\n            return resolve();\n        });\n    }\n\n\n    public disconnect () {\n        return new Promise<void>((resolve, reject) => {\n            this._webBLEServer.device.gatt.disconnect();\n            return resolve();\n        });\n    }\n\n\n    public async discoverCharacteristicsForService (uuid: string) {\n        debug(\"Service/characteristic discovery started\");\n        const service = await this._webBLEServer.getPrimaryService(uuid);\n        const characteristics = await service.getCharacteristics();\n        for (const characteristic of characteristics) {\n            this._characteristics[characteristic.uuid] = characteristic;\n        }\n        debug(\"Service/characteristic discovery finished\");\n    }\n\n\n    public subscribeToCharacteristic (uuid: string, callback: (data: Buffer) => void) {\n        if (this._listeners[uuid]) {\n            this._characteristics[uuid].removeEventListener(\"characteristicvaluechanged\", this._listeners[uuid]);\n        }\n        // @ts-ignore\n        this._listeners[uuid] = (event) => {\n            const buf = Buffer.alloc(event.target.value.buffer.byteLength);\n            const view = new Uint8Array(event.target.value.buffer);\n            for (let i = 0; i < buf.length; i++) {\n                buf[i] = view[i];\n            }\n            debug(\"Incoming data\", buf);\n            return callback(buf);\n        };\n        this._characteristics[uuid].addEventListener(\"characteristicvaluechanged\", this._listeners[uuid]);\n\n        const mailbox = Array.from(this._mailbox);\n        this._mailbox = [];\n        for (const data of mailbox) {\n            debug(\"Replayed from mailbox (LPF2_ALL)\", data);\n            callback(data);\n        }\n\n        this._characteristics[uuid].startNotifications();\n    }\n\n\n    public addToCharacteristicMailbox (uuid: string, data: Buffer) {\n        this._mailbox.push(data);\n    }\n\n\n    public readFromCharacteristic (uuid: string, callback: (err: string | null, data: Buffer | null) => void) {\n        // @ts-ignore\n        this._characteristics[uuid].readValue().then((data) => {\n            const buf = Buffer.alloc(data.buffer.byteLength);\n            const view = new Uint8Array(data.buffer);\n            for (let i = 0; i < buf.length; i++) {\n                buf[i] = view[i];\n            }\n            callback(null, buf);\n        });\n    }\n\n\n    public writeToCharacteristic (uuid: string, data: Buffer) {\n        return this._queue = this._queue.then(() => this._characteristics[uuid].writeValue(data));\n    }\n\n\n    private _sanitizeUUID (uuid: string) {\n        return uuid.replace(/-/g, \"\");\n    }\n\n\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n"],"sourceRoot":""}